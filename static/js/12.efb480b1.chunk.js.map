{"version":3,"sources":["components/UserCard.js","pages/teacher/TeacherSearchModal.js","pages/my/topic/CreateTopic.js"],"names":["MainComponent","user","remove","history","useHistory","color","iconPadding","className","header","class","content","lastName","onClick","push","id","degreeName","code","firstName","style","right","position","name","text","email","width","fields","key","label","_style","Component","view","disableView","selected","useState","page","setPage","data","setData","useEffect","api","get","params","direction","then","size","show","onClose","closeButton","items","sorter","hover","striped","columnFilter","itemsPerPage","activePage","clickableRows","onRowClick","onActivePageChange","newPage","align","TopicCreate","location","educationMethods","majors","minStudentTake","maxStudentTake","form","setForm","thesis","setThesis","guideTeachers","setGuideTeachers","searchTeachers","setSearchTeachers","setValueForm","path","value","nextForm","_","cloneDeep","set","setGetForm","getPath","setPath","onChange","e","target","onChangeCheck","event","parseInt","currentTarget","current","includes","filter","element","selectProps","state","exitTopic","map","setView","teacher","row","htmlFor","placeholder","md","variant","custom","checked","inline","contextHolder","educationMethod","some","xs","major","slice","guideTeacher","index","length","type","rows","semester","patch","response","post"],"mappings":"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","file":"static/js/12.efb480b1.chunk.js","sourcesContent":["import CIcon from \"@coreui/icons-react\";\r\nimport { CLink, CTooltip, CWidgetIcon } from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst MainComponent = ({ user, remove }) => {\r\n  const history = useHistory();\r\n\r\n  const viewDetail = () => {\r\n    history.push(`/users/${user.id}`);\r\n  };\r\n\r\n  if (!user) return null;\r\n\r\n  return (\r\n    <CWidgetIcon\r\n      color=\"info\"\r\n      iconPadding={false}\r\n      className=\"mb-0\"\r\n      header={\r\n        <tr class=\"d-flex justify-content-between\">\r\n          <CTooltip content={`Xem chi tiết thông tin về ${user.lastName}`}>\r\n            <CLink onClick={viewDetail}>\r\n              <td>\r\n                {`${user.degreeName} mã số ${user.code}`}\r\n                <br />\r\n                {`${user.firstName} ${user.lastName}`}\r\n              </td>\r\n            </CLink>\r\n          </CTooltip>\r\n          {remove && (\r\n            <CTooltip content={\"Xóa\"}>\r\n              <CLink\r\n                style={{ right: 5, position: \"absolute\" }}\r\n                onClick={remove}\r\n              >\r\n                <CIcon name=\"cil-x-circle\" />\r\n              </CLink>\r\n            </CTooltip>\r\n          )}\r\n        </tr>\r\n      }\r\n      text={<small>{user.email}</small>}\r\n    >\r\n      <CIcon width={24} name=\"cil-user\" />\r\n    </CWidgetIcon>\r\n  );\r\n};\r\n\r\nexport default MainComponent;\r\n","import {\r\n  CButton,\r\n  CDataTable,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CPagination\r\n} from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport api from \"src/service/api\";\r\n\r\nconst fields = [\r\n  { key: \"code\", label: \"Mã số\", _style: { width: \"10%\" } },\r\n  { key: \"firstName\", label: \"Họ\" },\r\n  { key: \"lastName\", label: \"Tên\", _style: { width: \"10%\" } },\r\n  { key: \"subjectDepartmentName\", label: \"Bộ môn\" },\r\n  { key: \"degreeName\", label: \"Học vị\" },\r\n  { key: \"email\", label: \"Email:@hcmut.edu.vn\" },\r\n];\r\n\r\nconst Component = ({ view, disableView, selected }) => {\r\n  const [page, setPage] = useState(1);\r\n  const [data, setData] = useState([]);\r\n  const size = 5;\r\n\r\n  const pageChange = (newPage) => {\r\n    if (page !== newPage) {\r\n      setPage(newPage);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    api\r\n      .get(\"/users/type-teacher\", { params: { direction: \"DESC\" } })\r\n      .then(setData);\r\n  }, [page]);\r\n\r\n  return (\r\n    <CModal color=\"info\" size=\"lg\" show={view} onClose={disableView}>\r\n      <CModalHeader closeButton>\r\n        <CModalTitle>Tìm kiếm giáo viên</CModalTitle>\r\n      </CModalHeader>\r\n      <CModalBody>\r\n        <CDataTable\r\n          items={data}\r\n          fields={fields}\r\n          sorter\r\n          hover\r\n          striped\r\n          columnFilter\r\n          itemsPerPage={size}\r\n          activePage={page}\r\n          clickableRows\r\n          onRowClick={selected}\r\n        />\r\n        <CPagination\r\n          activePage={page}\r\n          onActivePageChange={pageChange}\r\n          align=\"center\"\r\n        />\r\n      </CModalBody>\r\n      <CModalFooter>\r\n        <CButton color=\"secondary\" onClick={disableView}>\r\n          Quay về\r\n        </CButton>\r\n      </CModalFooter>\r\n    </CModal>\r\n  );\r\n};\r\n\r\nexport default Component;\r\n","import CIcon from \"@coreui/icons-react\";\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCardHeader,\r\n  CCol,\r\n  CForm,\r\n  CFormGroup,\r\n  CInput,\r\n  CInputCheckbox,\r\n  CInputRadio,\r\n  CLabel,\r\n  CSelect,\r\n  CTextarea,\r\n} from \"@coreui/react\";\r\nimport _ from \"lodash\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport UserCard from \"src/components/UserCard\";\r\nimport TeacherSearchModal from \"src/pages/teacher/TeacherSearchModal\";\r\nimport api from \"src/service/api\";\r\nimport contextHolder from \"src/service/contextService\";\r\n\r\nconst TopicCreate = ({ location }) => {\r\n  const history = useHistory();\r\n  const [form, setForm] = useState({\r\n    // thesis: false,\r\n    educationMethods: [],\r\n    majors: [],\r\n    minStudentTake: 1,\r\n    maxStudentTake: 3,\r\n  });\r\n  const [thesis, setThesis] = useState(false);\r\n  const [guideTeachers, setGuideTeachers] = useState([]);\r\n  const [searchTeachers, setSearchTeachers] = useState(false);\r\n\r\n  const setValueForm = (path, value) => {\r\n    let nextForm = _.cloneDeep(form);\r\n    _.set(nextForm, path, value);\r\n    setForm(nextForm);\r\n  };\r\n\r\n  const setGetForm = (getPath, setPath) => {\r\n    return {\r\n      value: _.get(form, getPath),\r\n      onChange: (e) => setValueForm(getPath ?? setPath, e.target.value),\r\n    };\r\n  };\r\n\r\n  const onChangeCheck = (event, path) => {\r\n    const id = parseInt(event.currentTarget.value);\r\n    let current = _.get(form, path);\r\n    if (current.includes(id)) {\r\n      current = current.filter((element) => element !== id);\r\n    } else {\r\n      current.push(id);\r\n    }\r\n    setValueForm(path, current);\r\n  };\r\n\r\n  const selectProps = (path) => {\r\n    return {\r\n      onChange: (e) => setValueForm(path, e.currentTarget.value),\r\n    };\r\n  };\r\n\r\n  const create = () => {\r\n    form.thesis = thesis;\r\n    form.semester = contextHolder.semester;\r\n    form.guideTeachers = guideTeachers;\r\n    if (form.id) {\r\n      api\r\n        .patch(\"/topics\", form)\r\n        .then((response) => response && history.push(`/my/topics/guide`));\r\n    } else {\r\n      api\r\n        .post(\"/topics\", form)\r\n        .then((response) => response && history.push(`/my/topics/guide`));\r\n    }\r\n  };\r\n\r\n  const removeGuideTeacher = (teacher) => {\r\n    setGuideTeachers(guideTeachers.filter((e) => e !== teacher));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (location?.state) {\r\n      const exitTopic = location.state;\r\n      exitTopic.educationMethods = exitTopic.educationMethods.map((e) => e.id);\r\n      exitTopic.majors = exitTopic.majors.map((e) => e.id);\r\n      setForm(exitTopic);\r\n      setThesis(exitTopic.thesis);\r\n      setGuideTeachers(location.state.guideTeachers);\r\n    } else api.get(\"/users/token\").then((user) => setGuideTeachers([user]));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <CCard>\r\n      <TeacherSearchModal\r\n        view={searchTeachers}\r\n        setView={() => setSearchTeachers(false)}\r\n        selected={(teacher) => {\r\n          setSearchTeachers(false);\r\n          setGuideTeachers([...guideTeachers, teacher]);\r\n        }}\r\n      />\r\n      <CCardHeader>\r\n        <h5>{form.id ? `Chỉnh sửa đề tài` : \"Tạo đề tài\"}</h5>\r\n      </CCardHeader>\r\n      <CCardBody>\r\n        <CForm>\r\n          <CFormGroup row>\r\n            <CCol>\r\n              <CLabel htmlFor=\"name.vi\">Tên đề tài tiếng việt</CLabel>\r\n              <CInput\r\n                id=\"name.vi\"\r\n                placeholder=\"Text\"\r\n                {...setGetForm(\"name.vi\")}\r\n              />\r\n            </CCol>\r\n            <CCol>\r\n              <CLabel htmlFor=\"name.en\">Tên đề tài tiếng anh</CLabel>\r\n              <CInput\r\n                id=\"name.en\"\r\n                placeholder=\"Text\"\r\n                {...setGetForm(\"name.en\")}\r\n              />\r\n            </CCol>\r\n          </CFormGroup>\r\n\r\n          <CFormGroup row>\r\n            <CCol md=\"6\">\r\n              <CFormGroup row>\r\n                <CCol md=\"4\">\r\n                  <CLabel>Loại đề tài</CLabel>\r\n                  <CFormGroup variant=\"custom-radio\">\r\n                    <CInputRadio\r\n                      custom\r\n                      id=\"nonThesis\"\r\n                      name=\"type\"\r\n                      checked={!thesis}\r\n                      value={false}\r\n                      onChange={() => setThesis(false)}\r\n                    />\r\n                    <CLabel variant=\"custom-checkbox\" htmlFor=\"nonThesis\">\r\n                      Đề cương\r\n                    </CLabel>\r\n                  </CFormGroup>\r\n                  <CFormGroup variant=\"custom-radio\" inline>\r\n                    <CInputRadio\r\n                      custom\r\n                      id=\"thesis\"\r\n                      name=\"type\"\r\n                      checked={thesis}\r\n                      onChange={() => setThesis(true)}\r\n                      value={true}\r\n                    />\r\n                    <CLabel variant=\"custom-checkbox\" htmlFor=\"thesis\">\r\n                      Luận văn\r\n                    </CLabel>\r\n                  </CFormGroup>\r\n                </CCol>\r\n                <CCol md=\"5\">\r\n                  <CLabel>Phương thức đào tạo</CLabel>\r\n                  {contextHolder.educationMethods.map((educationMethod) => (\r\n                    <CFormGroup\r\n                      key={educationMethod.id}\r\n                      variant=\"custom-checkbox\"\r\n                    >\r\n                      <CInputCheckbox\r\n                        custom\r\n                        id={\"educationMethod\" + educationMethod.id}\r\n                        name=\"educationMethod\"\r\n                        value={educationMethod.id}\r\n                        onChange={(event) =>\r\n                          onChangeCheck(event, \"educationMethods\")\r\n                        }\r\n                        checked={form.educationMethods?.some(\r\n                          (e) => e === educationMethod.id\r\n                        )}\r\n                      />\r\n                      <CLabel\r\n                        variant=\"custom-checkbox\"\r\n                        htmlFor={\"educationMethod\" + educationMethod.id}\r\n                      >\r\n                        {educationMethod.name}\r\n                      </CLabel>\r\n                    </CFormGroup>\r\n                  ))}\r\n                </CCol>\r\n              </CFormGroup>\r\n              <CFormGroup row>\r\n                <CCol xs=\"12\" md=\"5\">\r\n                  <CLabel>Ngành</CLabel>\r\n                  {contextHolder.majors.map((major) => (\r\n                    <CFormGroup key={major.id} variant=\"custom-checkbox\">\r\n                      <CInputCheckbox\r\n                        custom\r\n                        id={\"major\" + major.id}\r\n                        name=\"major\"\r\n                        value={major.id}\r\n                        onChange={(event) => onChangeCheck(event, \"majors\")}\r\n                        checked={form.majors.some((e) => e === major.id)}\r\n                      />\r\n                      <CLabel\r\n                        variant=\"custom-checkbox\"\r\n                        htmlFor={\"major\" + major.id}\r\n                      >\r\n                        {major.name}\r\n                      </CLabel>\r\n                    </CFormGroup>\r\n                  ))}\r\n                </CCol>\r\n                <CCol xs=\"12\" md=\"6\">\r\n                  <CLabel htmlFor=\"select\">Số lượng sinh viên</CLabel>\r\n\r\n                  <CFormGroup row>\r\n                    <CCol md=\"6\">\r\n                      <CLabel htmlFor=\"selectMin\">Tối thiểu</CLabel>\r\n                    </CCol>\r\n                    <CCol md=\"6\">\r\n                      <CSelect\r\n                        custom\r\n                        id=\"selectMin\"\r\n                        size=\"sm\"\r\n                        value={form.minStudentTake}\r\n                        {...selectProps(\"minStudentTake\")}\r\n                      >\r\n                        <option>1</option>\r\n                        <option>2</option>\r\n                        <option>3</option>\r\n                      </CSelect>\r\n                    </CCol>\r\n                    <CCol md=\"6\">\r\n                      <CLabel htmlFor=\"selectMax\">Tối đa</CLabel>\r\n                    </CCol>\r\n                    <CCol md=\"6\">\r\n                      <CSelect\r\n                        custom\r\n                        id=\"selectMax\"\r\n                        size=\"sm\"\r\n                        value={form.maxStudentTake}\r\n                        {...selectProps(\"maxStudentTake\")}\r\n                      >\r\n                        <option>1</option>\r\n                        <option>2</option>\r\n                        <option>3</option>\r\n                      </CSelect>\r\n                    </CCol>\r\n                  </CFormGroup>\r\n                </CCol>\r\n              </CFormGroup>\r\n            </CCol>\r\n\r\n            <CCol md=\"6\">\r\n              <CLabel>Giáo viên hướng dẫn</CLabel>\r\n              <CFormGroup row>\r\n                <CCol md=\"6\">\r\n                  <UserCard user={guideTeachers[0]} />\r\n                </CCol>\r\n              </CFormGroup>\r\n              <CLabel>Giáo viên đồng hướng dẫn</CLabel>\r\n              <CFormGroup row>\r\n                {guideTeachers.slice(1, 3).map((guideTeacher, index) => (\r\n                  <CCol key={index} md=\"6\">\r\n                    <UserCard\r\n                      user={guideTeacher}\r\n                      remove={() => removeGuideTeacher(guideTeacher)}\r\n                    />\r\n                  </CCol>\r\n                ))}\r\n                {guideTeachers.length < 3 && (\r\n                  <CCol md=\"4\">\r\n                    <CButton\r\n                      type=\"button\"\r\n                      color=\"info\"\r\n                      onClick={() => setSearchTeachers(true)}\r\n                    >\r\n                      Thêm giáo viên\r\n                    </CButton>\r\n                  </CCol>\r\n                )}\r\n              </CFormGroup>\r\n            </CCol>\r\n          </CFormGroup>\r\n\r\n          <CFormGroup>\r\n            <CLabel htmlFor=\"description\">Mô tả</CLabel>\r\n            <CTextarea\r\n              id=\"description\"\r\n              rows=\"9\"\r\n              placeholder=\"Content...\"\r\n              {...setGetForm(\"description\")}\r\n            />\r\n          </CFormGroup>\r\n\r\n          <CFormGroup>\r\n            <CLabel htmlFor=\"task\">Nhiệm vụ</CLabel>\r\n            <CTextarea\r\n              id=\"task\"\r\n              rows=\"9\"\r\n              placeholder=\"Content...\"\r\n              {...setGetForm(\"task\")}\r\n            />\r\n          </CFormGroup>\r\n\r\n          <CFormGroup>\r\n            <CLabel htmlFor=\"documentReference\">Tài liệu tham khảo</CLabel>\r\n            <CTextarea\r\n              id=\"documentReference\"\r\n              rows=\"5\"\r\n              placeholder=\"Content...\"\r\n              {...setGetForm(\"documentReference\")}\r\n            />\r\n          </CFormGroup>\r\n        </CForm>\r\n      </CCardBody>\r\n      <CCardFooter>\r\n        <CButton type=\"submit\" color=\"info\" onClick={create}>\r\n          <CIcon name=\"cil-save\" /> Lưu\r\n        </CButton>\r\n      </CCardFooter>\r\n    </CCard>\r\n  );\r\n};\r\n\r\nexport default TopicCreate;\r\n"],"sourceRoot":""}