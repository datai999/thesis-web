{"version":3,"sources":["pages/semester/CreateSemesterModal.js","pages/semester/Semesters.js"],"names":["MainComponent","view","disableView","success","defaultForm","useState","form","setForm","update","setUpdate","setGetForm","getPath","setPath","value","_","get","onChange","e","nextForm","cloneDeep","set","target","useEffect","Object","keys","length","color","show","onClose","closeButton","className","md","id","row","htmlFor","placeholder","invalid","name","valid","required","type","onClick","api","post","then","response","fields","key","label","_style","width","sorter","filter","getBadge","status","getAction","semester","editSemester","deleteSemester","setCurrentSemester","variant","size","multiLineTime","from","to","replace","history","useHistory","queryPage","useLocation","search","match","currentPage","Number","page","setPage","data","setData","createModal","setCreateModal","setEditSemester","toggle","refreshToggle","refresh","params","direction","CreateSemesterModal","sm","items","hover","activePage","scopedSlots","item","registerTopicTime","registerTopicStart","registerTopicEnd","topicTime","topicStart","topicEnd","thesisTime","thesisStart","thesisEnd","actions","delete","put","contextHolder","refreshSemester","onActivePageChange","newPage","push","align"],"mappings":"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","file":"static/js/53.1ac701c4.chunk.js","sourcesContent":["import {\r\n  CButton,\r\n  CCol,\r\n  CForm,\r\n  CFormGroup,\r\n  CInput,\r\n  CInvalidFeedback,\r\n  CLabel,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow\r\n} from \"@coreui/react\";\r\nimport _ from \"lodash\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport api from \"../../service/api\";\r\n\r\nconst MainComponent = ({ view, disableView, success, defaultForm = {} }) => {\r\n  const [form, setForm] = useState({});\r\n  const [update, setUpdate] = useState(false);\r\n\r\n  const register = () => {\r\n    api.post(`/semesters`, form).then((response) => {\r\n      disableView();\r\n      success(response);\r\n    });\r\n  };\r\n\r\n  const setGetForm = (getPath, setPath) => {\r\n    return {\r\n      value: _.get(form, getPath),\r\n      onChange: (e) => {\r\n        let nextForm = _.cloneDeep(form);\r\n        _.set(nextForm, getPath ?? setPath, e.target.value);\r\n        setForm(nextForm);\r\n      },\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    setUpdate(defaultForm && Object.keys(defaultForm).length > 0);\r\n    setForm(defaultForm);\r\n  }, [defaultForm]);\r\n\r\n  return (\r\n    <CModal color=\"info\" show={view} onClose={disableView}>\r\n      <CModalHeader closeButton>\r\n        <CModalTitle>{update ? \"Chỉnh sửa\" : \"Thêm mới\"} học kỳ</CModalTitle>\r\n      </CModalHeader>\r\n      <CModalBody className=\"px-3\">\r\n        {update && (\r\n          <CRow>\r\n            <CCol md=\"4\">\r\n              <CLabel>Mã học kỳ</CLabel>\r\n            </CCol>\r\n            <CCol>{form.id}</CCol>\r\n          </CRow>\r\n        )}\r\n\r\n        <CForm>\r\n          <CFormGroup row>\r\n            <CCol md=\"4\">\r\n              <CLabel htmlFor=\"name\">Học kỳ</CLabel>\r\n            </CCol>\r\n            <CCol>\r\n              <CInput\r\n                id=\"name\"\r\n                placeholder=\"211, 212, 213, ...\"\r\n                invalid={!form.name}\r\n                valid={form.name}\r\n                required\r\n                {...setGetForm(\"name\")}\r\n              />\r\n              {!form.name && (\r\n                <CInvalidFeedback>Học kỳ không được để trống</CInvalidFeedback>\r\n              )}\r\n            </CCol>\r\n          </CFormGroup>\r\n\r\n          <CFormGroup>\r\n            <CLabel htmlFor=\"startTime\">Sinh viên đăng kí đề tài</CLabel>\r\n            <CRow>\r\n              <CCol>\r\n                <CInput\r\n                  type=\"datetime-local\"\r\n                  {...setGetForm(\"registerTopicStart\")}\r\n                />\r\n              </CCol>\r\n              <CCol md=\"0 mt-2\">{\"-->\"}</CCol>\r\n              <CCol>\r\n                <CInput\r\n                  type=\"datetime-local\"\r\n                  {...setGetForm(\"registerTopicEnd\")}\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          </CFormGroup>\r\n\r\n          <CFormGroup>\r\n            <CLabel htmlFor=\"startTime\">Làm đề cương luận văn</CLabel>\r\n            <CRow>\r\n              <CCol>\r\n                <CInput type=\"datetime-local\" {...setGetForm(\"topicStart\")} />\r\n              </CCol>\r\n              <CCol md=\"0 mt-2\">{\"-->\"}</CCol>\r\n              <CCol>\r\n                <CInput type=\"datetime-local\" {...setGetForm(\"topicEnd\")} />\r\n              </CCol>\r\n            </CRow>\r\n          </CFormGroup>\r\n\r\n          <CFormGroup>\r\n            <CLabel htmlFor=\"startTime\">Làm luận văn</CLabel>\r\n            <CRow>\r\n              <CCol>\r\n                <CInput type=\"datetime-local\" {...setGetForm(\"thesisStart\")} />\r\n              </CCol>\r\n              <CCol md=\"0 mt-2\">{\"-->\"}</CCol>\r\n              <CCol>\r\n                <CInput type=\"datetime-local\" {...setGetForm(\"thesisEnd\")} />\r\n              </CCol>\r\n            </CRow>\r\n          </CFormGroup>\r\n        </CForm>\r\n      </CModalBody>\r\n      <CModalFooter>\r\n        <CButton color=\"info\" onClick={register}>\r\n          Xác nhận\r\n        </CButton>\r\n        <CButton color=\"secondary\" onClick={disableView}>\r\n          Quay về\r\n        </CButton>\r\n      </CModalFooter>\r\n    </CModal>\r\n  );\r\n};\r\n\r\nexport default MainComponent;\r\n","import CIcon from \"@coreui/icons-react\";\r\nimport {\r\n  CBadge,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CDataTable,\r\n  CDropdown,\r\n  CDropdownItem,\r\n  CDropdownMenu,\r\n  CDropdownToggle,\r\n  CPagination,\r\n  CRow\r\n} from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport contextHolder from \"src/service/contextService\";\r\nimport api from \"../../service/api\";\r\nimport CreateSemesterModal from \"./CreateSemesterModal\";\r\n\r\nconst fields = [\r\n  { key: \"id\", label: \"Mã\", _style: { width: \"1%\" } },\r\n  { key: \"name\", label: \"Học kỳ\" },\r\n  { key: \"status\", label: \"Trạng thái\" },\r\n  {\r\n    key: \"registerTopicTime\",\r\n    label: \"Thời gian đăng ký đề tài\",\r\n  },\r\n  {\r\n    key: \"topicTime\",\r\n    label: \"Thời gian làm DCLV\",\r\n  },\r\n  {\r\n    key: \"thesisTime\",\r\n    label: \"Thời gian làm luận văn\",\r\n  },\r\n  {\r\n    key: \"actions\",\r\n    label: \"\",\r\n    _style: { width: 1 },\r\n    sorter: false,\r\n    filter: false,\r\n  },\r\n];\r\n\r\nconst getBadge = (status) => {\r\n  switch (status) {\r\n    case \"USING\":\r\n      return \"success\";\r\n    case \"USED\":\r\n      return \"secondary\";\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nconst getAction = (\r\n  semester,\r\n  editSemester,\r\n  deleteSemester,\r\n  setCurrentSemester\r\n) => {\r\n  switch (semester.status) {\r\n    case \"USING\":\r\n      return (\r\n        <CButton\r\n          color=\"primary\"\r\n          variant=\"outline\"\r\n          size=\"sm\"\r\n          onClick={editSemester}\r\n        >\r\n          <CIcon name=\"cil-pencil\" />\r\n        </CButton>\r\n      );\r\n    case \"USED\":\r\n      return null;\r\n    default:\r\n      return (\r\n        <CDropdown variant=\"btn-group\">\r\n          <CDropdownToggle color=\"primary\" variant=\"outline\"></CDropdownToggle>\r\n          <CDropdownMenu>\r\n            <CDropdownItem onClick={setCurrentSemester}>\r\n              Đặt làm học kỳ hiện tại\r\n            </CDropdownItem>\r\n            <CDropdownItem onClick={editSemester}>Chỉnh sửa</CDropdownItem>\r\n            <CDropdownItem onClick={deleteSemester}>Xóa</CDropdownItem>\r\n          </CDropdownMenu>\r\n        </CDropdown>\r\n      );\r\n  }\r\n};\r\n\r\nconst MainComponent = () => {\r\n  const history = useHistory();\r\n  const queryPage = useLocation().search.match(/page=([0-9]+)/, \"\");\r\n  const currentPage = Number(queryPage && queryPage[1] ? queryPage[1] : 1);\r\n  const [page, setPage] = useState(currentPage);\r\n  const [data, setData] = useState([]);\r\n  const [createModal, setCreateModal] = useState(false);\r\n  const [editSemester, setEditSemester] = useState({});\r\n  const [toggle, refreshToggle] = useState(false);\r\n\r\n  const refresh = () => refreshToggle(!toggle);\r\n\r\n  const pageChange = (newPage) => {\r\n    currentPage !== newPage && history.push(`/semesters?page=${newPage}`);\r\n    setPage(newPage);\r\n  };\r\n\r\n  const deleteSemester = (semester) =>\r\n    api.delete(`/semesters/${semester.id}`).then(refresh);\r\n\r\n  const setCurrentSemester = (semester) =>\r\n    api.put(`/semesters/current?id=${semester.id}`).then(() => {\r\n      refresh();\r\n      contextHolder.refreshSemester();\r\n    });\r\n\r\n  useEffect(() => {\r\n    api\r\n      .get(`/semesters`, { params: { direction: \"DESC\" } })\r\n      .then((response) => {\r\n        setData(response);\r\n      });\r\n  }, [page, toggle]);\r\n\r\n  return (\r\n    <CCard>\r\n      <CreateSemesterModal\r\n        view={createModal}\r\n        disableView={() => setCreateModal(false)}\r\n        success={refresh}\r\n        defaultForm={editSemester}\r\n      />\r\n      <CCardHeader>\r\n        <CRow>\r\n          <CCol sm=\"5\">\r\n            <h4 id=\"traffic\" className=\"card-title mb-0\">\r\n              Danh sách học kỳ\r\n            </h4>\r\n          </CCol>\r\n          <CCol sm=\"7\" className=\"d-none d-md-block\">\r\n            <CButton\r\n              color=\"primary\"\r\n              className=\"float-right\"\r\n              onClick={() => {\r\n                setEditSemester({});\r\n                setCreateModal(true);\r\n              }}\r\n            >\r\n              Thêm học kỳ mới\r\n            </CButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CCardHeader>\r\n      <CCardBody>\r\n        <CDataTable\r\n          items={data}\r\n          fields={fields}\r\n          hover\r\n          activePage={page}\r\n          scopedSlots={{\r\n            status: (item) => (\r\n              <td className=\"py-2\">\r\n                <CBadge color={getBadge(item.status)}>\r\n                  {item.status\r\n                    ? item.status !== \"USED\"\r\n                      ? \"Hiện tại\"\r\n                      : \"Đã qua\"\r\n                    : null}\r\n                </CBadge>\r\n              </td>\r\n            ),\r\n            registerTopicTime: (item) =>\r\n              multiLineTime(item.registerTopicStart, item.registerTopicEnd),\r\n            topicTime: (item) => multiLineTime(item.topicStart, item.topicEnd),\r\n            thesisTime: (item) =>\r\n              multiLineTime(item.thesisStart, item.thesisEnd),\r\n            actions: (item) => (\r\n              <td>\r\n                {getAction(\r\n                  item,\r\n                  () => {\r\n                    setEditSemester(item);\r\n                    setCreateModal(true);\r\n                  },\r\n                  () => deleteSemester(item),\r\n                  () => setCurrentSemester(item)\r\n                )}\r\n              </td>\r\n            ),\r\n          }}\r\n        />\r\n        <CPagination\r\n          activePage={page}\r\n          onActivePageChange={pageChange}\r\n          align=\"center\"\r\n        />\r\n      </CCardBody>\r\n    </CCard>\r\n  );\r\n};\r\n\r\nconst multiLineTime = (from, to) => (\r\n  <td>\r\n    <CRow>\r\n      <CCol md=\"0\" className=\"ml-3\">\r\n        <div>Từ</div>\r\n        <div>Đến</div>\r\n      </CCol>\r\n      <CCol>\r\n        <div>{from?.replace(\"T\", \" \")}</div>\r\n        <div>{to?.replace(\"T\", \" \")}</div>\r\n      </CCol>\r\n    </CRow>\r\n  </td>\r\n);\r\n\r\nexport default MainComponent;\r\n"],"sourceRoot":""}