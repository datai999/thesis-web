{"version":3,"sources":["pages/teacher/TeacherSearchModal.js","pages/council/Council.js","pages/council/AssignCouncilTable.js","pages/council/AssignCouncil.js"],"names":["fields","key","label","_style","width","Component","view","disableView","selected","useState","page","setPage","data","setData","useEffect","api","get","params","direction","then","color","size","show","onClose","closeButton","items","sorter","hover","striped","columnFilter","itemsPerPage","activePage","clickableRows","onRowClick","onActivePageChange","newPage","align","onClick","UserCard","user","remove","iconPadding","className","header","class","degreeName","code","content","style","right","position","name","firstName","lastName","text","email","MainComponent","location","subjectDepartmentId","useLocation","pathname","match","history","useHistory","form","setForm","councilRoles","setCouncilRoles","searchTeachers","setSearchTeachers","currentRole","setCurrentRole","setGetForm","getPath","setPath","value","_","onChange","e","path","nextForm","cloneDeep","set","setValueForm","target","state","sort","response","forEach","teachers","members","councilMember","role","id","member","setView","teacher","existed","councilRole","toastHolder","error","nextRoles","nextTeachers","map","index","md","max","roleIndex","teacherId","filter","range","length","type","placeholder","row","rows","semester","contextHolder","subjectDepartment","subjectDepartments","find","toString","flat","patch","success","push","post","topics","scopedSlots","guideTeacherRenders","item","guideTeachers","paths","councilId","assignedTopics","setAssignedTopics","unassignTopics","setUnassignTopics","toggle","setToggle","Council","AssignCouncilTable","topic"],"mappings":"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","file":"static/js/14.c905e4d6.chunk.js","sourcesContent":["import {\r\n  CButton,\r\n  CDataTable,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CPagination\r\n} from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport api from \"src/service/api\";\r\n\r\nconst fields = [\r\n  { key: \"code\", label: \"Mã số\", _style: { width: \"10%\" } },\r\n  { key: \"firstName\", label: \"Họ\" },\r\n  { key: \"lastName\", label: \"Tên\", _style: { width: \"10%\" } },\r\n  { key: \"subjectDepartmentName\", label: \"Bộ môn\" },\r\n  { key: \"degreeName\", label: \"Học vị\" },\r\n  { key: \"email\", label: \"Email:@hcmut.edu.vn\" },\r\n];\r\n\r\nconst Component = ({ view, disableView, selected }) => {\r\n  const [page, setPage] = useState(1);\r\n  const [data, setData] = useState([]);\r\n  const size = 5;\r\n\r\n  const pageChange = (newPage) => {\r\n    if (page !== newPage) {\r\n      setPage(newPage);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    api\r\n      .get(\"/users/type-teacher\", { params: { direction: \"DESC\" } })\r\n      .then(setData);\r\n  }, [page]);\r\n\r\n  return (\r\n    <CModal color=\"info\" size=\"lg\" show={view} onClose={disableView}>\r\n      <CModalHeader closeButton>\r\n        <CModalTitle>Tìm kiếm giáo viên</CModalTitle>\r\n      </CModalHeader>\r\n      <CModalBody>\r\n        <CDataTable\r\n          items={data}\r\n          fields={fields}\r\n          sorter\r\n          hover\r\n          striped\r\n          columnFilter\r\n          itemsPerPage={size}\r\n          activePage={page}\r\n          clickableRows\r\n          onRowClick={selected}\r\n        />\r\n        <CPagination\r\n          activePage={page}\r\n          onActivePageChange={pageChange}\r\n          align=\"center\"\r\n        />\r\n      </CModalBody>\r\n      <CModalFooter>\r\n        <CButton color=\"secondary\" onClick={disableView}>\r\n          Quay về\r\n        </CButton>\r\n      </CModalFooter>\r\n    </CModal>\r\n  );\r\n};\r\n\r\nexport default Component;\r\n","import CIcon from \"@coreui/icons-react\";\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCardHeader,\r\n  CCol,\r\n  CForm,\r\n  CFormGroup,\r\n  CInput,\r\n  CLabel,\r\n  CLink,\r\n  CRow,\r\n  CTextarea,\r\n  CTooltip,\r\n  CWidgetIcon,\r\n} from \"@coreui/react\";\r\nimport _ from \"lodash\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport TeacherSearchModal from \"src/pages/teacher/TeacherSearchModal\";\r\nimport api from \"src/service/api\";\r\nimport contextHolder from \"src/service/contextService\";\r\nimport toastHolder from \"src/service/toastService\";\r\n\r\nconst MainComponent = ({ location }) => {\r\n  const subjectDepartmentId = useLocation().pathname.match(\r\n    /(?:\\/councils\\/)(\\d+)/,\r\n    \"\"\r\n  )[1];\r\n\r\n  const history = useHistory();\r\n  const [form, setForm] = useState({});\r\n  const [councilRoles, setCouncilRoles] = useState([]);\r\n  const [searchTeachers, setSearchTeachers] = useState(false);\r\n  const [currentRole, setCurrentRole] = useState(-1);\r\n\r\n  const remove = (roleIndex, teacherId) => {\r\n    const nextRoles = _.cloneDeep(councilRoles);\r\n    const nextTeachers = councilRoles[roleIndex].teachers.filter(\r\n      (e) => e.id !== teacherId\r\n    );\r\n    nextRoles[roleIndex].teachers = nextTeachers;\r\n    setCouncilRoles(nextRoles);\r\n  };\r\n\r\n  const setValueForm = (path, value) => {\r\n    let nextForm = _.cloneDeep(form);\r\n    _.set(nextForm, path, value);\r\n    setForm(nextForm);\r\n  };\r\n\r\n  const setGetForm = (getPath, setPath) => {\r\n    return {\r\n      value: _.get(form, getPath),\r\n      onChange: (e) => setValueForm(getPath ?? setPath, e.target.value),\r\n    };\r\n  };\r\n\r\n  const submit = () => {\r\n    form.semester = contextHolder.semester;\r\n    form.subjectDepartment = contextHolder.subjectDepartments.find(\r\n      (e) => e.id.toString() === subjectDepartmentId\r\n    );\r\n    form.members = councilRoles\r\n      .map((role) =>\r\n        role.teachers.map((user) => {\r\n          return {\r\n            role: role,\r\n            member: user,\r\n          };\r\n        })\r\n      )\r\n      .flat();\r\n    if (form.id) {\r\n      api.patch(\"/councils\", form).then(() => {\r\n        toastHolder.success(\"Cập nhật hội đồng thành công\");\r\n        history.push(`/councils/${subjectDepartmentId}`);\r\n      });\r\n    } else {\r\n      api.post(\"/councils\", form).then(() => {\r\n        toastHolder.success(\"Tạo hội đồng thành công\");\r\n        history.push(`/councils/${subjectDepartmentId}`);\r\n      });\r\n    }\r\n  };\r\n\r\n  const onFormSelected = (teacher) => {\r\n    setSearchTeachers(false);\r\n    let existed = false;\r\n    councilRoles.forEach((councilRole) =>\r\n      councilRole.teachers.forEach((teacher) => {\r\n        if (teacher.id == teacher.id) {\r\n          existed = true;\r\n        }\r\n      })\r\n    );\r\n    if (existed) {\r\n      toastHolder.error(\r\n        `Giáo viên ${teacher.firstName} ${teacher.lastName} đã là thành viên của hội đồng`\r\n      );\r\n    } else {\r\n      const nextRoles = _.cloneDeep(councilRoles);\r\n      const nextTeachers = [...councilRoles[currentRole].teachers, teacher];\r\n      nextRoles[currentRole].teachers = nextTeachers;\r\n      setCouncilRoles(nextRoles);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (location?.state) {\r\n      setForm(location.state);\r\n    }\r\n    api\r\n      .get(\"/council-roles\", {\r\n        params: {\r\n          sort: \"displayOrder\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        response.forEach((e) => {\r\n          e.teachers = [];\r\n          if (location?.state) {\r\n            location.state.members?.forEach((councilMember) => {\r\n              if (councilMember.role.id === e.id)\r\n                e.teachers = [...e.teachers, councilMember.member];\r\n            });\r\n          }\r\n        });\r\n        setCouncilRoles(response);\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <CCard>\r\n      <TeacherSearchModal\r\n        view={searchTeachers}\r\n        setView={() => setSearchTeachers(false)}\r\n        selected={onFormSelected}\r\n      />\r\n      <CCardHeader>\r\n        <h5 className=\"card-title mb-0\">\r\n          {form.id ? `Chỉnh sửa` : \"Tạo\"} {\" hội đồng \"} {form.id}\r\n        </h5>\r\n      </CCardHeader>\r\n      <CCardBody>\r\n        <CForm>\r\n          <CRow>\r\n            <CCol className=\"mb-4\">\r\n              <CRow>\r\n                {councilRoles.map((role, index) => (\r\n                  <CCol\r\n                    key={role.id}\r\n                    md={role.max > 1 ? 12 : 6}\r\n                    className=\"border py-2\"\r\n                  >\r\n                    <CFormGroup className=\"mb-0\">\r\n                      <CLabel>{role.name}</CLabel>\r\n                      <br />\r\n                      <CRow>\r\n                        {role.teachers.map((e) => (\r\n                          <CCol key={e} md={role.max > 1 ? 6 : 12}>\r\n                            <UserCard\r\n                              user={e}\r\n                              remove={() => remove(index, e.id)}\r\n                            />\r\n                          </CCol>\r\n                        ))}\r\n                        {_.range(role.teachers.length, role.max).map((e) => (\r\n                          <CCol key={e}>\r\n                            <CButton\r\n                              key={e}\r\n                              size=\"sm\"\r\n                              type=\"button\"\r\n                              color=\"primary\"\r\n                              onClick={() => {\r\n                                setCurrentRole(index);\r\n                                setSearchTeachers(true);\r\n                              }}\r\n                            >\r\n                              Thêm giáo viên\r\n                            </CButton>\r\n                          </CCol>\r\n                        ))}\r\n                      </CRow>\r\n                    </CFormGroup>\r\n                  </CCol>\r\n                ))}\r\n              </CRow>\r\n            </CCol>\r\n            <CCol>\r\n              <CFormGroup>\r\n                <CLabel>Địa điểm</CLabel>\r\n                <CInput\r\n                  placeholder=\"Cơ sở, tòa nhà, phòng hoặc link meet...\"\r\n                  {...setGetForm(\"location\")}\r\n                />\r\n              </CFormGroup>\r\n\r\n              <CFormGroup row>\r\n                <CCol>\r\n                  <CLabel>Ngày</CLabel>\r\n                  <CInput type=\"date\" {...setGetForm(\"reserveDate\")} />\r\n                </CCol>\r\n                <CCol>\r\n                  <CLabel>Thời gian bắt đầu</CLabel>\r\n                  <CInput type=\"time\" {...setGetForm(\"startTime\")} />\r\n                </CCol>\r\n                <CCol>\r\n                  <CLabel>Thời gian kết thúc</CLabel>\r\n                  <CInput type=\"time\" {...setGetForm(\"endTime\")} />\r\n                </CCol>\r\n              </CFormGroup>\r\n\r\n              <CFormGroup>\r\n                <CLabel>Ghi chú</CLabel>\r\n                <CTextarea\r\n                  rows=\"7\"\r\n                  placeholder=\"Ghi chú...\"\r\n                  {...setGetForm(\"note\")}\r\n                />\r\n              </CFormGroup>\r\n            </CCol>\r\n          </CRow>\r\n        </CForm>\r\n      </CCardBody>\r\n      <CCardFooter>\r\n        <CButton type=\"submit\" color=\"primary\" onClick={submit}>\r\n          <CIcon name=\"cil-save\" /> Lưu\r\n        </CButton>\r\n      </CCardFooter>\r\n    </CCard>\r\n  );\r\n};\r\n\r\nconst UserCard = ({ user, remove }) => (\r\n  <CWidgetIcon\r\n    color=\"info\"\r\n    iconPadding={false}\r\n    className=\"mb-2 mx-0 px-0\"\r\n    header={\r\n      <>\r\n        <tr class=\"d-flex justify-content-between\">\r\n          <td>{`${user.degreeName} mã số ${user.code}`}</td>\r\n          <td>\r\n            <CTooltip content={\"Xóa giáo viên\"}>\r\n              <CLink\r\n                className=\"card-header-action\"\r\n                style={{ right: 5, position: \"absolute\" }}\r\n                onClick={remove}\r\n              >\r\n                <CIcon name=\"cil-x-circle\" />\r\n              </CLink>\r\n            </CTooltip>\r\n          </td>\r\n        </tr>\r\n        {`${user.firstName} ${user.lastName}`}\r\n      </>\r\n    }\r\n    text={<small>{`${user.email}`}</small>}\r\n  >\r\n    <CIcon width={24} name=\"cil-user\" />\r\n  </CWidgetIcon>\r\n);\r\n\r\nexport default MainComponent;\r\n","import CIcon from \"@coreui/icons-react\";\r\nimport { CDataTable, CPagination, CTooltip } from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst fields = [\r\n  { key: \"id\", label: \"Mã\", _style: { width: \"1%\" } },\r\n  { key: \"names\", label: \"Tên đề tài\" },\r\n  {\r\n    key: \"educationMethodNames\",\r\n    label: \"Phương thức\",\r\n  },\r\n  { key: \"majorNames\", label: \"Ngành\" },\r\n  { key: \"guideTeacherRenders\", label: \"Giáo viên hướng dẫn\" },\r\n];\r\n\r\nconst MainComponent = ({ onRowClick, topics = [] }) => {\r\n  const [page, setPage] = useState(1);\r\n\r\n  return (\r\n    <>\r\n      <CDataTable\r\n        items={topics}\r\n        fields={fields}\r\n        activePage={page}\r\n        itemsPerPage={20}\r\n        size=\"sm\"\r\n        striped\r\n        columnFilter\r\n        sorter\r\n        hover\r\n        clickableRows\r\n        onRowClick={onRowClick}\r\n        scopedSlots={{\r\n          guideTeacherRenders: (item) => (\r\n            <td>\r\n              {item.guideTeachers.map((user) => (\r\n                <div>\r\n                  {user.code} {user.firstName} {user.lastName}{\" \"}\r\n                  <CTooltip content={user.email}>\r\n                    <CIcon name=\"cil-envelope-closed\" className=\"mb-2\" />\r\n                  </CTooltip>\r\n                </div>\r\n              ))}\r\n            </td>\r\n          ),\r\n        }}\r\n      />\r\n      <CPagination\r\n        size=\"sm\"\r\n        align=\"center\"\r\n        activePage={page}\r\n        onActivePageChange={setPage}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainComponent;\r\n","import CIcon from \"@coreui/icons-react\";\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCol,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport api from \"src/service/api\";\r\nimport toastHolder from \"src/service/toastService\";\r\nimport AssignCouncilTable from \"./AssignCouncilTable\";\r\nimport Council from \"./Council\";\r\n\r\nconst MainComponent = ({ location }) => {\r\n  const paths = location.pathname.match(\r\n    /(?:\\/councils\\/)(\\d+)(?:\\/edit\\/)(\\d+)/,\r\n    \"\"\r\n  );\r\n  const subjectDepartmentId = paths[1];\r\n  const councilId = paths[2];\r\n\r\n  const [assignedTopics, setAssignedTopics] = useState([]);\r\n  const [unassignTopics, setUnassignTopics] = useState([]);\r\n  const [toggle, setToggle] = useState(false);\r\n\r\n  const submit = () => {\r\n    api\r\n      .patch(\r\n        `/councils/${councilId}/assign-topics?topicIds=${assignedTopics.map(\r\n          (e) => e.id\r\n        )}`\r\n      )\r\n      .then(() => {\r\n        toastHolder.success(\"Phân công hội đồng thành công\");\r\n        setToggle(!toggle);\r\n      });\r\n  };\r\n\r\n  const assign = (topic) => {\r\n    setUnassignTopics(unassignTopics.filter((e) => e.id !== topic.id));\r\n    setAssignedTopics([...assignedTopics, topic]);\r\n  };\r\n\r\n  const unassign = (topic) => {\r\n    setAssignedTopics(assignedTopics.filter((e) => e.id !== topic.id));\r\n    setUnassignTopics([...unassignTopics, topic]);\r\n  };\r\n\r\n  const getAssignedTopics = () => {\r\n    api\r\n      .get(`/councils/detail/${councilId}`)\r\n      .then((response) => setAssignedTopics(response.topics));\r\n  };\r\n\r\n  const getUnassignTopics = () => {\r\n    api\r\n      .get(`/topics/need-council`, {\r\n        params: { subjectDepartmentId },\r\n      })\r\n      .then((response) => {\r\n        response.forEach((e) => {\r\n          e.guideTeacherRenders = e.guideTeachers.map((user) =>\r\n            `${user.code} ${user.firstName} ${user.lastName} ${user.email}`.toString()\r\n          );\r\n        });\r\n        setUnassignTopics(response);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAssignedTopics();\r\n    getUnassignTopics();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Council location={location} />\r\n      <CCard>\r\n        <CCardBody>\r\n          <CRow>\r\n            <CCol>\r\n              <h5 className=\"card-title mb-0\">Đề tài thuộc hội đồng</h5>\r\n              <AssignCouncilTable\r\n                onRowClick={unassign}\r\n                topics={assignedTopics}\r\n              />\r\n            </CCol>\r\n            <CCol>\r\n              <h5 className=\"card-title mb-0\">Đề tài cần gán hội đồng</h5>\r\n              <AssignCouncilTable onRowClick={assign} topics={unassignTopics} />\r\n            </CCol>\r\n          </CRow>\r\n        </CCardBody>\r\n        <CCardFooter>\r\n          <CButton color=\"primary\" onClick={submit}>\r\n            <CIcon name=\"cil-save\" /> Lưu\r\n          </CButton>\r\n        </CCardFooter>\r\n      </CCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainComponent;\r\n"],"sourceRoot":""}