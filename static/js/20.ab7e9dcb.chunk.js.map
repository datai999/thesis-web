{"version":3,"sources":["components/TableWithDetail.js","pages/topic/RegisterTopicModal.js","pages/topic/StudentRegisterTopicList.js","pages/topic/TopicTable.js","pages/topic/Topics.js"],"names":["MainComponent","fields","items","scopedSlots","DetailComponent","pagination","props","history","useHistory","queryPage","useLocation","search","match","currentPage","Number","useState","page","setPage","details","setDetails","size","hover","sorter","columnFilter","tableFilter","itemsPerPageSelect","itemsPerPage","tableProps","activePage","actions","item","index","vertical","ActionComponent","content","includes","color","variant","onClick","position","indexOf","newDetails","slice","splice","toggleDetails","name","show","onActivePageChange","newPage","push","window","location","pathname","align","multiLine","array","map","e","view","disableView","confirm","topic","onClose","closeButton","names","md","educationMethodNames","majorNames","guideTeachers","guideTeacher","code","firstName","lastName","api","post","id","then","response","data","setTopicRegister","setRegisterTopicModal","canRegister","loginUserHasAny","PERMISSIONS","STUDENT","canViewScore","EDUCATION_STAFF","TEACHER","description","task","documentReference","Array","maxStudentTake","keys","students","type","key","label","_style","width","filter","thesis","setData","registerTopicModal","topicRegister","useEffect","get","params","direction","forEach","studentCount","length","TableWithDetail","StudentRegisterTopicList","email","className","status","RegisterTopicModal","isThesisTab","activeThesisTab","setActiveThesisTab","activeTab","onActiveTabChange","TopicTable"],"mappings":"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","file":"static/js/20.ab7e9dcb.chunk.js","sourcesContent":["import CIcon from \"@coreui/icons-react\";\r\nimport {\r\n  CButton,\r\n  CButtonGroup,\r\n  CCollapse,\r\n  CDataTable,\r\n  CPagination,\r\n  CTooltip,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nconst MainComponent = ({\r\n  fields,\r\n  items,\r\n  scopedSlots,\r\n  DetailComponent,\r\n  pagination = true,\r\n  ...props\r\n}) => {\r\n  const history = useHistory();\r\n  const queryPage = useLocation().search.match(/page=([0-9]+)/, \"\");\r\n  const currentPage = Number(queryPage && queryPage[1] ? queryPage[1] : 1);\r\n  const [page, setPage] = useState(currentPage);\r\n  const [details, setDetails] = useState([]);\r\n\r\n  const pageChange = (newPage) => {\r\n    currentPage !== newPage &&\r\n      history.push(`${window.location.pathname}?page=${newPage}`);\r\n    setPage(newPage);\r\n  };\r\n\r\n  const toggleDetails = (index) => {\r\n    const position = details.indexOf(index);\r\n    let newDetails = details.slice();\r\n    if (position !== -1) {\r\n      newDetails.splice(position, 1);\r\n    } else {\r\n      newDetails = [...details, index];\r\n    }\r\n    setDetails(newDetails);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CDataTable\r\n        size=\"sm\"\r\n        hover\r\n        sorter\r\n        columnFilter\r\n        tableFilter\r\n        itemsPerPageSelect\r\n        itemsPerPage={props.size ?? 5}\r\n        // clickableRows\r\n        {...props.tableProps}\r\n        fields={fields}\r\n        items={items}\r\n        activePage={page}\r\n        scopedSlots={{\r\n          actions: (item, index) => (\r\n            <CButtonGroup vertical size=\"sm\">\r\n              {props?.ActionComponent && (\r\n                <props.ActionComponent item={item} index={index} />\r\n              )}\r\n              <CTooltip\r\n                content={details.includes(index) ? \"Ẩn bớt\" : \"Chi tiết\"}\r\n              >\r\n                <CButton\r\n                  color=\"primary\"\r\n                  variant=\"outline\"\r\n                  onClick={() => {\r\n                    toggleDetails(index);\r\n                  }}\r\n                >\r\n                  <CIcon\r\n                    name={`cil-chevron-${\r\n                      details.includes(index) ? \"top\" : \"bottom\"\r\n                    }`}\r\n                  />\r\n                </CButton>\r\n              </CTooltip>\r\n            </CButtonGroup>\r\n          ),\r\n          details: (item, index) => (\r\n            <CCollapse show={details.includes(index)}>\r\n              <DetailComponent item={item} index={index} />\r\n            </CCollapse>\r\n          ),\r\n          ...scopedSlots,\r\n        }}\r\n      />\r\n      {pagination && (\r\n        <CPagination\r\n          size=\"sm\"\r\n          activePage={page}\r\n          onActivePageChange={pageChange}\r\n          align=\"center\"\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainComponent;\r\n","import {\r\n  CButton,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport api from \"src/service/api\";\r\n\r\nconst MainComponent = ({ view, disableView, confirm, topic }) => {\r\n  const registerTopic = () => {\r\n    api.post(`/topics/${topic.id}/students`).then((response) => {\r\n      confirm(response.data);\r\n    });\r\n    disableView();\r\n  };\r\n\r\n  if (!topic) return null;\r\n  return (\r\n    <CModal color=\"warning\" show={view} onClose={disableView}>\r\n      <CModalHeader closeButton>\r\n        <CModalTitle>Đăng ký đề tài</CModalTitle>\r\n      </CModalHeader>\r\n      <CModalBody>\r\n        <center>\r\n          <h5>{topic.names && topic.names[0]}</h5>\r\n          <h5>{topic.names && topic.names[1]}</h5>\r\n        </center>\r\n\r\n        <br></br>\r\n\r\n        <CRow>\r\n          <CCol md=\"2\">Đào tạo:</CCol>\r\n          <CCol>{multiLine(topic.educationMethodNames)}</CCol>\r\n          <CCol md=\"2\">Ngành:</CCol>\r\n          <CCol>{multiLine(topic.majorNames)}</CCol>\r\n        </CRow>\r\n        <br></br>\r\n\r\n        <CRow>\r\n          <CCol md=\"4\">Giáo viên hướng dẫn:</CCol>\r\n          <CCol>\r\n            {topic.guideTeachers?.map((guideTeacher) => (\r\n              <tr>\r\n                {guideTeacher.code} {guideTeacher.firstName}{\" \"}\r\n                {guideTeacher.lastName}\r\n              </tr>\r\n            ))}\r\n          </CCol>\r\n        </CRow>\r\n      </CModalBody>\r\n      <CModalFooter>\r\n        <CButton color=\"info\" onClick={registerTopic}>\r\n          Xác nhận\r\n        </CButton>\r\n        <CButton color=\"secondary\" onClick={disableView}>\r\n          Quay về\r\n        </CButton>\r\n      </CModalFooter>\r\n    </CModal>\r\n  );\r\n};\r\n\r\nconst multiLine = (array) => (\r\n  <td>\r\n    {array?.map((e) => (\r\n      <tr>{e}</tr>\r\n    ))}\r\n  </td>\r\n);\r\n\r\nexport default MainComponent;\r\n","import CIcon from \"@coreui/icons-react\";\r\nimport {\r\n  CButton,\r\n  CButtonGroup,\r\n  CCardBody,\r\n  CCol,\r\n  CRow,\r\n  CTooltip,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { loginUserHasAny, PERMISSIONS } from \"src/service/permissionService\";\r\n\r\nconst MainComponent = ({ item, setTopicRegister, setRegisterTopicModal }) => {\r\n  const canRegister = loginUserHasAny([PERMISSIONS.STUDENT]);\r\n  const canViewScore = loginUserHasAny([\r\n    PERMISSIONS.EDUCATION_STAFF,\r\n    PERMISSIONS.TEACHER,\r\n  ]);\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <CCardBody>\r\n      <CRow>\r\n        <CCol md=\"5\">\r\n          Mô tả\r\n          <br></br>\r\n          {item.description}\r\n        </CCol>\r\n        <CCol md=\"5\">\r\n          Nhiệm vụ\r\n          <br></br>\r\n          {item.task}\r\n          <br></br>\r\n          Tài liệu\r\n          <br></br>\r\n          {item.documentReference}\r\n        </CCol>\r\n        <CCol>\r\n          Sinh viên:\r\n          <br></br>\r\n          {[...Array(item.maxStudentTake).keys()].map((index) => (\r\n            <div>\r\n              {item.students && item.students[index] ? (\r\n                <div>\r\n                  <CRow>\r\n                    <CCol>{item.students[index].firstName}</CCol>\r\n                  </CRow>\r\n                  <CRow>\r\n                    <CCol>{item.students[index].lastName}</CCol>\r\n                    <CCol>{item.students[index].code}</CCol>\r\n                  </CRow>\r\n                </div>\r\n              ) : (\r\n                canRegister && (\r\n                  <CButton\r\n                    type=\"button\"\r\n                    color=\"info\"\r\n                    size=\"sm\"\r\n                    onClick={() => {\r\n                      setTopicRegister(item);\r\n                      setRegisterTopicModal(true);\r\n                    }}\r\n                  >\r\n                    Đăng ký\r\n                  </CButton>\r\n                )\r\n              )}\r\n              <br></br>\r\n            </div>\r\n          ))}\r\n        </CCol>\r\n        <td>\r\n          {canViewScore && (\r\n            <CButtonGroup vertical size=\"sm\">\r\n              <CTooltip content={\"Bảng điểm\"}>\r\n                <CButton\r\n                  color=\"primary\"\r\n                  variant=\"outline\"\r\n                  onClick={() => {\r\n                    history.push(`/score/topic/${item.id}`);\r\n                  }}\r\n                >\r\n                  <CIcon name=\"cil-calculator\" />\r\n                </CButton>\r\n              </CTooltip>\r\n            </CButtonGroup>\r\n          )}\r\n        </td>\r\n      </CRow>\r\n    </CCardBody>\r\n  );\r\n};\r\n\r\nexport default MainComponent;\r\n","import CIcon from \"@coreui/icons-react\";\r\nimport { CBadge, CTooltip } from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport TableWithDetail from \"src/components/TableWithDetail\";\r\nimport api from \"src/service/api\";\r\nimport RegisterTopicModal from \"./RegisterTopicModal\";\r\nimport StudentRegisterTopicList from \"./StudentRegisterTopicList\";\r\n\r\nconst fields = [\r\n  { key: \"id\", label: \"Mã\", _style: { width: \"1%\" } },\r\n  { key: \"names\", label: \"Tên đề tài\" },\r\n  { key: \"semester\", label: \"Học kỳ\", _style: { width: \"1%\" } },\r\n  {\r\n    key: \"educationMethodNames\",\r\n    label: \"Phương thức\",\r\n    _style: { width: \"12%\" },\r\n  },\r\n  { key: \"majorNames\", label: \"Ngành\" },\r\n  { key: \"subjectDepartmentName\", label: \"Bộ môn\" },\r\n  { key: \"guideTeachers\", label: \"Giáo viên hướng dẫn\" },\r\n  { key: \"studentCount\", label: \"Số SV đăng ký\", _style: { width: \"1%\" } },\r\n  {\r\n    key: \"actions\",\r\n    label: \"\",\r\n    _style: { width: \"1%\" },\r\n    sorter: false,\r\n    filter: false,\r\n  },\r\n];\r\n\r\nconst MainComponent = ({ thesis }) => {\r\n  const history = useHistory();\r\n  const [data, setData] = useState([]);\r\n  const [registerTopicModal, setRegisterTopicModal] = useState(false);\r\n  const [topicRegister, setTopicRegister] = useState();\r\n\r\n  useEffect(() => {\r\n    api\r\n      .get(`/topics/type`, {\r\n        params: { type: thesis ? \"thesis\" : \"outline\", direction: \"DESC\" },\r\n      })\r\n      .then((response) => {\r\n        response.forEach((e) => {\r\n          e.studentCount = `${\r\n            e.students.length === e.maxStudentTake ? \"Đủ\" : \"Đã đăng ký\"\r\n          }  ${e.students.length}/${e.maxStudentTake}`;\r\n        });\r\n        setData(response);\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <TableWithDetail\r\n        fields={fields}\r\n        items={data}\r\n        DetailComponent={({ item }) => (\r\n          <StudentRegisterTopicList\r\n            item={item}\r\n            setTopicRegister={setTopicRegister}\r\n            setRegisterTopicModal={setRegisterTopicModal}\r\n          />\r\n        )}\r\n        scopedSlots={{\r\n          names: (item) => multiLine(item.names),\r\n          educationMethodNames: (item) => multiLine(item.educationMethodNames),\r\n          majorNames: (item) => multiLine(item.majorNames),\r\n          guideTeachers: (item) => (\r\n            <td>\r\n              {item.guideTeachers?.map((guideTeacher) => (\r\n                <tr>\r\n                  {guideTeacher.code} {guideTeacher.firstName}{\" \"}\r\n                  {guideTeacher.lastName}{\" \"}\r\n                  <CTooltip content={guideTeacher.email}>\r\n                    <CIcon name=\"cil-envelope-closed\" className=\"mb-1\" />\r\n                  </CTooltip>\r\n                </tr>\r\n              ))}\r\n            </td>\r\n          ),\r\n          studentCount: (item) => (\r\n            <td className=\"py-2\">\r\n              <CBadge color={item.status === \"FULL\" ? \"success\" : \"secondary\"}>\r\n                {item.studentCount}\r\n              </CBadge>\r\n            </td>\r\n          ),\r\n        }}\r\n      />\r\n      <RegisterTopicModal\r\n        view={registerTopicModal}\r\n        disableView={() => setRegisterTopicModal(false)}\r\n        confirm={() => history.push(\"/my/topics/execute\")}\r\n        topic={topicRegister}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst multiLine = (array) => (\r\n  <td>\r\n    {array?.map((e) => (\r\n      <tr>{e}</tr>\r\n    ))}\r\n  </td>\r\n);\r\n\r\nexport default MainComponent;\r\n","import {\r\n  CCard,\r\n  CCardBody,\r\n  CNav,\r\n  CNavItem,\r\n  CNavLink,\r\n  CTabContent,\r\n  CTabPane,\r\n  CTabs,\r\n} from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport TopicTable from \"./TopicTable\";\r\n\r\nconst MainComponent = () => {\r\n  const history = useHistory();\r\n  const isThesisTab = window.location.pathname === \"/topics/thesis\";\r\n  const [activeThesisTab, setActiveThesisTab] = useState(isThesisTab);\r\n\r\n  useEffect(() => {\r\n    history.push(`/topics/${activeThesisTab ? \"thesis\" : \"outline\"}`);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isThesisTab, activeThesisTab]);\r\n\r\n  return (\r\n    <CCard>\r\n      <CCardBody>\r\n        <CTabs\r\n          activeTab={activeThesisTab ? 1 : 0}\r\n          onActiveTabChange={(index) => setActiveThesisTab(index === 1)}\r\n        >\r\n          <CNav variant=\"tabs\">\r\n            <CNavItem>\r\n              <CNavLink>Đề cương</CNavLink>\r\n            </CNavItem>\r\n            <CNavItem>\r\n              <CNavLink>Luận văn</CNavLink>\r\n            </CNavItem>\r\n          </CNav>\r\n          <CTabContent>\r\n            <CTabPane>{!isThesisTab && <TopicTable thesis={false} />}</CTabPane>\r\n            <CTabPane>{isThesisTab && <TopicTable thesis={true} />}</CTabPane>\r\n          </CTabContent>\r\n        </CTabs>\r\n      </CCardBody>\r\n    </CCard>\r\n  );\r\n};\r\n\r\nexport default MainComponent;\r\n"],"sourceRoot":""}