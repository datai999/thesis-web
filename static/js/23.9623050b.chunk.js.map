{"version":3,"sources":["pages/template/Criterion.js","pages/template/TemplateDetail.js"],"names":["MainComponent","criterion","children","deep","edit","updateCriterion","removeCriterion","props","score","scores","find","e","id","toString","updateChildren","renderChildren","item","index","key","nextItem","nextChildren","localUpdateCriterion","splice","localRemoveCriterion","className","row","rows","parseInt","description","length","value","onChange","target","md","content","size","color","variant","split","name","onClick","nextCriterion","parentId","mark","list","setList","map","style","maxWidth","placeholder","disabled","disableMark","updateScore","slice","comment","canEdit","loginUserHasAny","PERMISSIONS","EDUCATION_STAFF","history","useHistory","templateIdPath","useLocation","pathname","match","useState","data","setData","setEdit","toggle","setToggle","setGetForm","getPath","setPath","_","get","path","nextForm","cloneDeep","set","setValueForm","useEffect","api","then","res","patch","response","toastHolder","success","post","push","rootCriterion","nextData"],"mappings":"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","file":"static/js/23.9623050b.chunk.js","sourcesContent":["import CIcon from \"@coreui/icons-react\";\r\nimport {\r\n  CButton,\r\n  CCol,\r\n  CDropdown,\r\n  CDropdownItem,\r\n  CDropdownMenu,\r\n  CDropdownToggle,\r\n  CForm,\r\n  CFormGroup,\r\n  CInput,\r\n  CTextarea,\r\n  CTooltip,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\n\r\nconst MainComponent = ({\r\n  criterion = { children: [] },\r\n  deep,\r\n  edit,\r\n  updateCriterion = () => {},\r\n  removeCriterion = () => {},\r\n  ...props\r\n}) => {\r\n  const score = props.scores?.find(\r\n    (e) => e.criterion.id.toString() === criterion.id.toString()\r\n  );\r\n\r\n  const updateChildren = (children) =>\r\n    updateCriterion({ ...criterion, children });\r\n\r\n  const addCriterion = () => {\r\n    const nextCriterion = { ...criterion };\r\n    nextCriterion.children = [\r\n      ...criterion.children,\r\n      { parentId: criterion.id, children: [] },\r\n    ];\r\n    updateCriterion(nextCriterion);\r\n  };\r\n\r\n  const localUpdateCriterion = (index, nextItem) => {\r\n    const nextChildren = [...criterion.children];\r\n    nextChildren[index] = nextItem;\r\n    updateChildren(nextChildren);\r\n  };\r\n\r\n  const localRemoveCriterion = (index) => {\r\n    const nextChildren = [...criterion.children];\r\n    nextChildren.splice(index, 1);\r\n    updateChildren(nextChildren);\r\n  };\r\n\r\n  const renderChildren = (item, index) => {\r\n    return (\r\n      <MainComponent\r\n        {...props}\r\n        key={item.id}\r\n        criterion={item}\r\n        deep={deep + 1}\r\n        edit={edit}\r\n        updateCriterion={(nextItem) => localUpdateCriterion(index, nextItem)}\r\n        removeCriterion={() => localRemoveCriterion(index)}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <CForm className={`${deep > 0 ? `ml-4 mt-${4 - deep}` : \"\"}`}>\r\n      <CFormGroup row className=\"pl-0 ml-0 mb-0\">\r\n        <CCol className=\"pl-0 pr-1\">\r\n          {edit && deep > 0 ? (\r\n            <CTextarea\r\n              rows={parseInt(criterion.description?.length / 130) + 1}\r\n              value={criterion.description}\r\n              onChange={(e) =>\r\n                updateCriterion({ ...criterion, description: e.target.value })\r\n              }\r\n            />\r\n          ) : (\r\n            <>{deep > 0 ? criterion.description : null}</>\r\n          )}\r\n        </CCol>\r\n        {edit && (\r\n          <CCol md=\"0\">\r\n            <CDropdown>\r\n              <CTooltip content={\"Giữ và kéo để thay đổi thứ tự\"}>\r\n                <CDropdownToggle\r\n                  size=\"sm\"\r\n                  color=\"primary\"\r\n                  variant=\"outline\"\r\n                  split\r\n                >\r\n                  <CIcon name=\"cil-cursor-move\" />\r\n                </CDropdownToggle>\r\n              </CTooltip>\r\n              <CDropdownMenu>\r\n                <CDropdownItem onClick={addCriterion}>\r\n                  Thêm tiêu chí con\r\n                </CDropdownItem>\r\n                {deep > 0 && (\r\n                  <>\r\n                    <CDropdownItem\r\n                      onClick={() => {\r\n                        updateCriterion({\r\n                          ...criterion,\r\n                          mark: !criterion.mark,\r\n                        });\r\n                      }}\r\n                    >\r\n                      {criterion.mark ? \"Hủy chấm điểm\" : \"Chấm điểm tiêu chí\"}\r\n                    </CDropdownItem>\r\n                    <CDropdownItem onClick={removeCriterion}>\r\n                      Xóa tiêu chí\r\n                    </CDropdownItem>\r\n                  </>\r\n                )}\r\n              </CDropdownMenu>\r\n            </CDropdown>\r\n          </CCol>\r\n        )}\r\n      </CFormGroup>\r\n\r\n      {criterion.children &&\r\n        criterion.children.length > 0 &&\r\n        (edit ? (\r\n          <ReactSortable list={criterion?.children} setList={updateChildren}>\r\n            {criterion?.children?.map(renderChildren)}\r\n          </ReactSortable>\r\n        ) : (\r\n          criterion?.children?.map(renderChildren)\r\n        ))}\r\n\r\n      {criterion.mark && (\r\n        <CFormGroup row className=\"m-0 ml-2\">\r\n          <CCol className=\"p-0\" style={{ maxWidth: 60 }}>\r\n            <CInput\r\n              size=\"sm\"\r\n              placeholder={\"Điểm\"}\r\n              value={score?.score}\r\n              disabled={props.disableMark}\r\n              onChange={(e) =>\r\n                props.updateScore({\r\n                  ...score,\r\n                  criterion: { id: criterion.id },\r\n                  score: e.target.value,\r\n                })\r\n              }\r\n            />\r\n          </CCol>\r\n          <CCol className=\"p-0\">\r\n            <CTextarea\r\n              size=\"sm\"\r\n              rows={1}\r\n              placeholder={`Bình luận cho: ${criterion.description?.slice(\r\n                0,\r\n                150\r\n              )}`}\r\n              value={score?.comment}\r\n              disabled={props.disableMark}\r\n              onChange={(e) =>\r\n                props.updateScore({\r\n                  ...score,\r\n                  criterion: { id: criterion.id },\r\n                  comment: e.target.value,\r\n                })\r\n              }\r\n            />\r\n          </CCol>\r\n          {edit && (\r\n            <CCol md=\"0\">\r\n              <CTooltip content={`Bỏ chấm điểm tiêu chí`}>\r\n                <CButton\r\n                  size=\"sm\"\r\n                  color=\"primary\"\r\n                  variant={\"ghost\"}\r\n                  onClick={() => {\r\n                    updateCriterion({\r\n                      ...criterion,\r\n                      mark: false,\r\n                    });\r\n                  }}\r\n                >\r\n                  <CIcon name=\"cil-trash\" />\r\n                </CButton>\r\n              </CTooltip>\r\n            </CCol>\r\n          )}\r\n        </CFormGroup>\r\n      )}\r\n    </CForm>\r\n  );\r\n};\r\n\r\nexport default MainComponent;\r\n","import CIcon from \"@coreui/icons-react\";\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CForm,\r\n  CFormGroup,\r\n  CInput,\r\n  CRow,\r\n  CTextarea,\r\n  CTooltip,\r\n} from \"@coreui/react\";\r\nimport _ from \"lodash\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport api from \"src/service/api\";\r\nimport { loginUserHasAny, PERMISSIONS } from \"src/service/permissionService\";\r\nimport toastHolder from \"src/service/toastService\";\r\nimport Criterion from \"./Criterion\";\r\n\r\nconst MainComponent = () => {\r\n  const canEdit = loginUserHasAny([PERMISSIONS.EDUCATION_STAFF]);\r\n\r\n  const history = useHistory();\r\n  const templateIdPath = useLocation().pathname.match(\r\n    /templates\\/([0-9]+)/,\r\n    \"\"\r\n  );\r\n  const [data, setData] = useState({});\r\n  const [edit, setEdit] = useState(templateIdPath ? false : true);\r\n  const [toggle, setToggle] = useState(false);\r\n\r\n  const submit = () => {\r\n    if (templateIdPath)\r\n      api.patch(`/templates`, data).then((response) => {\r\n        toastHolder.success(\r\n          `Cập nhật mẫu tiêu chí số ${response.id} thành công`\r\n        );\r\n        setData(response);\r\n        setEdit(false);\r\n      });\r\n    else\r\n      api.post(`/templates`, data).then((response) => {\r\n        history.push(`/templates/${response.id}`);\r\n        toastHolder.success(\"Tạo mẫu tiêu chí thành công\");\r\n      });\r\n  };\r\n\r\n  const setValueForm = (path, value) => {\r\n    let nextForm = _.cloneDeep(data);\r\n    _.set(nextForm, path, value);\r\n    setData(nextForm);\r\n  };\r\n\r\n  const setGetForm = (getPath, setPath) => {\r\n    return {\r\n      value: _.get(data, getPath),\r\n      onChange: (e) => setValueForm(getPath ?? setPath, e.target.value),\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    templateIdPath &&\r\n      api.get(`/templates/detail/${templateIdPath[1]}`).then((res) => {\r\n        setData(res);\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [toggle]);\r\n\r\n  return (\r\n    <CCard>\r\n      <CCardHeader>\r\n        <CForm>\r\n          <CRow>\r\n            <CCol className=\"mt-2 mb-2\">\r\n              <h5>\r\n                <center>\r\n                  <strong>\r\n                    {templateIdPath\r\n                      ? `Mẫu tiêu chí số ${data.id}`\r\n                      : \"Tạo mẫu tiêu chí\"}\r\n                  </strong>\r\n                </center>\r\n              </h5>\r\n            </CCol>\r\n            <CCol md=\"0\">\r\n              {edit ? (\r\n                <>\r\n                  {templateIdPath && (\r\n                    <CButton\r\n                      color=\"primary\"\r\n                      variant=\"outline\"\r\n                      onClick={() => {\r\n                        setEdit(false);\r\n                        setToggle(!toggle);\r\n                      }}\r\n                    >\r\n                      <CIcon name=\"cil-x\" /> Hủy\r\n                    </CButton>\r\n                  )}\r\n\r\n                  <CButton color=\"primary\" variant=\"outline\" onClick={submit}>\r\n                    <CIcon name=\"cil-save\" /> Lưu\r\n                  </CButton>\r\n                </>\r\n              ) : (\r\n                canEdit && (\r\n                  <CTooltip content={\"Chỉnh sửa mẫu tiêu chí\"}>\r\n                    <CButton\r\n                      color=\"primary\"\r\n                      variant=\"outline\"\r\n                      onClick={() => setEdit(true)}\r\n                    >\r\n                      <CIcon name=\"cil-pencil\" />\r\n                    </CButton>\r\n                  </CTooltip>\r\n                )\r\n              )}\r\n            </CCol>\r\n          </CRow>\r\n          <fieldset disabled={!edit}>\r\n            <CFormGroup row>\r\n              <CCol md=\"1\">Tên mẫu tiêu chí</CCol>\r\n              <CCol>\r\n                <CInput {...setGetForm(\"name\")} />\r\n              </CCol>\r\n            </CFormGroup>\r\n            <CFormGroup row>\r\n              <CCol md=\"1\">Mô tả</CCol>\r\n              <CCol>\r\n                <CTextarea rows=\"3\" {...setGetForm(\"description\")} />\r\n              </CCol>\r\n            </CFormGroup>\r\n          </fieldset>\r\n        </CForm>\r\n      </CCardHeader>\r\n      <CCardBody className=\"pl-0 mr-3\">\r\n        <Criterion\r\n          criterion={data.rootCriterion}\r\n          deep={0}\r\n          edit={edit}\r\n          updateCriterion={(nextCriterion) => {\r\n            const nextData = { ...data, rootCriterion: nextCriterion };\r\n            setData(nextData);\r\n          }}\r\n        />\r\n      </CCardBody>\r\n    </CCard>\r\n  );\r\n};\r\n\r\nexport default MainComponent;\r\n"],"sourceRoot":""}