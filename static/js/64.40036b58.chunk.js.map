{"version":3,"sources":["views/pages/student/Students.js"],"names":["fields","key","label","_style","width","Component","history","useHistory","queryPage","useLocation","search","match","currentPage","Number","useState","page","setPage","data","setData","useEffect","api","get","params","direction","then","sm","id","className","items","hover","striped","sorter","columnFilter","itemsPerPage","activePage","clickableRows","onRowClick","item","console","log","scopedSlots","onActivePageChange","newPage","push","align"],"mappings":"wOAaMA,EAAS,CACb,CAAEC,IAAK,OAAQC,MAAO,gBAASC,OAAQ,CAAEC,MAAO,OAChD,CAAEH,IAAK,YAAaC,MAAO,WAC3B,CAAED,IAAK,WAAYC,MAAO,SAAOC,OAAQ,CAAEC,MAAO,QAClD,CAAEH,IAAK,SAAUC,MAAO,oBAAaC,OAAQ,CAAEC,MAAO,QACtD,CAAEH,IAAK,sBAAuBC,MAAO,uBAAWC,OAAQ,CAAEC,MAAO,QACjE,CAAEH,IAAK,YAAaC,MAAO,WAASC,OAAQ,CAAEC,MAAO,QACrD,CAAEH,IAAK,QAASC,MAAO,uBACvB,CAAED,IAAK,QAASC,MAAO,oCAAiBC,OAAQ,CAAEC,MAAO,SAiE5CC,UA9DG,WAChB,IAAMC,EAAUC,cACVC,EAAYC,cAAcC,OAAOC,MAAM,gBAAiB,IACxDC,EAAcC,OAAOL,GAAaA,EAAU,GAAKA,EAAU,GAAK,GACtE,EAAwBM,mBAASF,GAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAaA,OALAC,qBAAU,WACRP,IAAgBG,GAAQC,EAAQJ,GAChCQ,IAAIC,IAAI,kBAAmB,CAAEC,OAAQ,CAAEC,UAAW,UAAYC,KAAKN,KAClE,CAACN,EAAaG,IAGf,eAAC,IAAD,WACE,cAAC,IAAD,UACE,eAAC,KAAD,WACE,cAAC,IAAD,CAAMU,GAAG,IAAT,SACE,oBAAIC,GAAG,UAAUC,UAAU,kBAA3B,yCAIF,cAAC,IAAD,CAAMF,GAAG,IAAIE,UAAU,2BAW3B,eAAC,IAAD,WACE,cAAC,IAAD,CACEC,MAAOX,EACPjB,OAAQA,EACR6B,OAAK,EACLC,SAAO,EACPC,QAAM,EACNC,cAAY,EACZC,aAvCK,EAwCLC,WAAYnB,EACZoB,eAAa,EACbC,WAAY,SAACC,GAAD,OAAUC,QAAQC,IAAIF,IAClCG,YAAa,KAEf,cAAC,KAAD,CACEN,WAAYnB,EACZ0B,mBA7CW,SAACC,GAClB9B,IAAgB8B,GAAWpC,EAAQqC,KAAR,yBAA+BD,KA6CpDE,MAAM","file":"static/js/64.40036b58.chunk.js","sourcesContent":["import {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CDataTable,\r\n  CPagination,\r\n  CRow\r\n} from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport api from \"../../../service/api\";\r\n\r\nconst fields = [\r\n  { key: \"code\", label: \"Mã số\", _style: { width: \"7%\" } },\r\n  { key: \"firstName\", label: \"Họ\" },\r\n  { key: \"lastName\", label: \"Tên\", _style: { width: \"10%\" } },\r\n  { key: \"gender\", label: \"Giới tính\", _style: { width: \"10%\" } },\r\n  { key: \"educationMethodName\", label: \"Đào tạo\", _style: { width: \"12%\" } },\r\n  { key: \"majorName\", label: \"Ngành\", _style: { width: \"13%\" } },\r\n  { key: \"email\", label: \"Email:@hcmut.edu.vn\" },\r\n  { key: \"phone\", label: \"Số điện thoại\", _style: { width: \"11%\" } },\r\n];\r\n\r\nconst Component = () => {\r\n  const history = useHistory();\r\n  const queryPage = useLocation().search.match(/page=([0-9]+)/, \"\");\r\n  const currentPage = Number(queryPage && queryPage[1] ? queryPage[1] : 1);\r\n  const [page, setPage] = useState(currentPage);\r\n  const [data, setData] = useState([]);\r\n\r\n  const size = 5;\r\n\r\n  const pageChange = (newPage) => {\r\n    currentPage !== newPage && history.push(`/students?page=${newPage}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    currentPage !== page && setPage(currentPage);\r\n    api.get(\"/users/students\", { params: { direction: \"DESC\" } }).then(setData);\r\n  }, [currentPage, page]);\r\n\r\n  return (\r\n    <CCard>\r\n      <CCardHeader>\r\n        <CRow>\r\n          <CCol sm=\"5\">\r\n            <h4 id=\"traffic\" className=\"card-title mb-0\">\r\n              Danh sách sinh viên\r\n            </h4>\r\n          </CCol>\r\n          <CCol sm=\"7\" className=\"d-none d-md-block\">\r\n            {/* <CButton\r\n              color=\"primary\"\r\n              className=\"float-right\"\r\n              onClick={() => history.push(`/students/create`)}\r\n            >\r\n              Thêm sinh viên mới\r\n            </CButton> */}\r\n          </CCol>\r\n        </CRow>\r\n      </CCardHeader>\r\n      <CCardBody>\r\n        <CDataTable\r\n          items={data}\r\n          fields={fields}\r\n          hover\r\n          striped\r\n          sorter\r\n          columnFilter\r\n          itemsPerPage={size}\r\n          activePage={page}\r\n          clickableRows\r\n          onRowClick={(item) => console.log(item)}\r\n          scopedSlots={{}}\r\n        />\r\n        <CPagination\r\n          activePage={page}\r\n          onActivePageChange={pageChange}\r\n          align=\"center\"\r\n        />\r\n      </CCardBody>\r\n    </CCard>\r\n  );\r\n};\r\n\r\nexport default Component;\r\n"],"sourceRoot":""}