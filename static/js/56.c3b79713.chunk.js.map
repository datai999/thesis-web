{"version":3,"sources":["pages/template/TemplateCard.js","pages/template/TemplateSearchModal.js","pages/template/SettingTemplate.js","pages/template/TemplateTable.js","pages/template/Templates.js"],"names":["MainComponent","settingTemplate","onDeleted","canDelete","loginUserHasAny","PERMISSIONS","EDUCATION_STAFF","viewTemplate","window","open","location","origin","templateId","color","iconPadding","className","header","class","content","onClick","name","style","top","right","position","size","variant","api","delete","id","then","text","description","slice","length","fields","key","label","_style","width","view","disableView","selected","useState","page","setPage","data","setData","useEffect","get","params","direction","show","onClose","closeButton","items","sorter","hover","striped","columnFilter","itemsPerPage","activePage","clickableRows","onRowClick","onActivePageChange","newPage","align","search","setSearch","currentRole","setCurrentRole","canEdit","getData","TemplateSearchModal","template","post","Object","entries","map","entry","role","action","md","searchTemplate","templates","filter","deleted","TemplateCard","history","useHistory","queryPage","useLocation","match","currentPage","Number","tableFilter","itemsPerPageSelect","scopedSlots","actions","item","push","tabs","url","tabName","component","TemplateTable","SettingTemplate","lastPath","pathname","split","pop","includes","tabIndex","setTabIndex","canCreate","activeTab","onActiveTabChange","e","sm","tab","index"],"mappings":"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","file":"static/js/56.c3b79713.chunk.js","sourcesContent":["import {\r\n  CDropdown,\r\n  CDropdownItem,\r\n  CDropdownMenu,\r\n  CDropdownToggle,\r\n  CLink,\r\n  CTooltip,\r\n  CWidgetIcon,\r\n} from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport api from \"src/service/api\";\r\nimport { loginUserHasAny, PERMISSIONS } from \"src/service/permissionService\";\r\n\r\nconst MainComponent = ({ settingTemplate, onDeleted }) => {\r\n  const canDelete = loginUserHasAny([PERMISSIONS.EDUCATION_STAFF]);\r\n\r\n  const viewTemplate = () =>\r\n    window.open(\r\n      `${window.location.origin}/templates/${settingTemplate.templateId}`,\r\n      \"_blank\"\r\n    );\r\n\r\n  const removeTemplate = () => {\r\n    api\r\n      .delete(`/setting-templates/logic/${settingTemplate.id}`)\r\n      .then(onDeleted);\r\n  };\r\n\r\n  return (\r\n    <CWidgetIcon\r\n      color=\"info\"\r\n      iconPadding={false}\r\n      className=\"mb-2 mx-0 px-0\"\r\n      header={\r\n        <tr class=\"d-flex justify-content-between\">\r\n          <td>\r\n            <CTooltip\r\n              content={`Xem chi tiết mẫu tiêu chí số ${settingTemplate.templateId}`}\r\n            >\r\n              <CLink onClick={viewTemplate}>{`${settingTemplate.name}`}</CLink>\r\n            </CTooltip>\r\n          </td>\r\n          {canDelete && (\r\n            <td>\r\n              <CDropdown style={{ top: 2, right: 5, position: \"absolute\" }}>\r\n                <CDropdownToggle\r\n                  size=\"sm\"\r\n                  color=\"dark\"\r\n                  variant=\"outline\"\r\n                ></CDropdownToggle>\r\n                <CDropdownMenu>\r\n                  <CDropdownItem onClick={viewTemplate}>\r\n                    Xem chi tiết\r\n                  </CDropdownItem>\r\n                  <CDropdownItem onClick={removeTemplate}>\r\n                    Xóa mẫu tiêu chí\r\n                  </CDropdownItem>\r\n                </CDropdownMenu>\r\n              </CDropdown>\r\n            </td>\r\n          )}\r\n        </tr>\r\n      }\r\n      text={\r\n        <small>{`${\r\n          settingTemplate.description.slice(0, 300) +\r\n          (settingTemplate.description.length > 300 ? \"...\" : \"\")\r\n        }`}</small>\r\n      }\r\n    >\r\n      {settingTemplate.templateId}\r\n    </CWidgetIcon>\r\n  );\r\n};\r\n\r\nexport default MainComponent;\r\n","import {\r\n  CButton,\r\n  CDataTable,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CPagination\r\n} from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport api from \"src/service/api\";\r\n\r\nconst fields = [\r\n  { key: \"id\", label: \"Mã\", _style: { width: 1 } },\r\n  { key: \"name\", label: \"Tên mẫu\" },\r\n  { key: \"description\", label: \"Mô tả\" },\r\n];\r\n\r\nconst MainComponent = ({ view, disableView, selected }) => {\r\n  const [page, setPage] = useState(1);\r\n  const [data, setData] = useState([]);\r\n  const size = 5;\r\n\r\n  const pageChange = (newPage) => {\r\n    if (page !== newPage) {\r\n      setPage(newPage);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    api\r\n      .get(\"/templates\", { params: { direction: \"DESC\" } })\r\n      .then(setData);\r\n  }, [page]);\r\n\r\n  return (\r\n    <CModal color=\"info\" size=\"lg\" show={view} onClose={disableView}>\r\n      <CModalHeader closeButton>\r\n        <CModalTitle>Tìm kiếm mẫu tiêu chí</CModalTitle>\r\n      </CModalHeader>\r\n      <CModalBody>\r\n        <CDataTable\r\n          items={data}\r\n          fields={fields}\r\n          sorter\r\n          hover\r\n          striped\r\n          columnFilter\r\n          itemsPerPage={size}\r\n          activePage={page}\r\n          clickableRows\r\n          onRowClick={selected}\r\n        />\r\n        <CPagination\r\n          activePage={page}\r\n          onActivePageChange={pageChange}\r\n          align=\"center\"\r\n        />\r\n      </CModalBody>\r\n      <CModalFooter>\r\n        <CButton color=\"secondary\" onClick={disableView}>\r\n          Quay về\r\n        </CButton>\r\n      </CModalFooter>\r\n    </CModal>\r\n  );\r\n};\r\n\r\nexport default MainComponent;\r\n","import {\r\n  CButton,\r\n  CCard,\r\n  CCardHeader,\r\n  CCol,\r\n  CListGroupItem,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport api from \"src/service/api\";\r\nimport { loginUserHasAny, PERMISSIONS } from \"src/service/permissionService\";\r\nimport TemplateCard from \"./TemplateCard\";\r\nimport TemplateSearchModal from \"./TemplateSearchModal\";\r\n\r\nconst MainComponent = () => {\r\n  const [data, setData] = useState({});\r\n  const [search, setSearch] = useState(false);\r\n  const [currentRole, setCurrentRole] = useState({});\r\n\r\n  const canEdit = loginUserHasAny([PERMISSIONS.EDUCATION_STAFF]);\r\n\r\n  const getData = () => api.get(`/setting-templates/group-role`).then(setData);\r\n\r\n  const searchTemplate = (role) => {\r\n    setCurrentRole(role);\r\n    setSearch(true);\r\n  };\r\n\r\n  const addTemplate = (template) => {\r\n    setSearch(false);\r\n    api.post(`/setting-templates`, { ...currentRole, template }).then(getData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"mb-3\">\r\n      <TemplateSearchModal\r\n        view={search}\r\n        disableView={() => setSearch(false)}\r\n        selected={addTemplate}\r\n      />\r\n      {Object.entries(data).map((entry) => (\r\n        <CCard className=\"mt-3\">\r\n          <CCardHeader color=\"dark\" className=\"text-white\">\r\n            {entry[0] === \"thesis\" ? \"Luận văn\" : \"Đề cương\"}\r\n          </CCardHeader>\r\n\r\n          {entry[1]?.map((role) => (\r\n            <CListGroupItem key={role.name} action>\r\n              <CRow>\r\n                <CCol md=\"2\">\r\n                  <strong>{role.name}</strong>\r\n                  <br />\r\n                  {canEdit && (\r\n                    <CButton\r\n                      size=\"sm\"\r\n                      color=\"primary\"\r\n                      variant=\"outline\"\r\n                      onClick={() => searchTemplate(role)}\r\n                    >\r\n                      Thêm mẫu tiêu chí\r\n                    </CButton>\r\n                  )}\r\n                </CCol>\r\n                <CCol>\r\n                  {role.templates\r\n                    .filter((settingTemplate) => !settingTemplate.deleted)\r\n                    .map((settingTemplate) => (\r\n                      <TemplateCard\r\n                        settingTemplate={settingTemplate}\r\n                        onDeleted={getData}\r\n                      />\r\n                    ))}\r\n                </CCol>\r\n              </CRow>\r\n            </CListGroupItem>\r\n          ))}\r\n        </CCard>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainComponent;\r\n","import CIcon from \"@coreui/icons-react\";\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CDataTable,\r\n  CPagination,\r\n  CTooltip,\r\n} from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { loginUserHasAny, PERMISSIONS } from \"src/service/permissionService\";\r\nimport api from \"../../service/api\";\r\n\r\nconst fields = [\r\n  { key: \"id\", label: \"Mã\", _style: { width: 1 } },\r\n  // {\r\n  //   key: \"displayOrder\",\r\n  //   label: \"Thứ tự hiển thị\",\r\n  //   _style: { minWidth: 30 },\r\n  // },\r\n  { key: \"name\", label: \"Tên mẫu\" },\r\n  { key: \"description\", label: \"Mô tả\" },\r\n  {\r\n    key: \"actions\",\r\n    label: \"\",\r\n    _style: { width: 1 },\r\n    sorter: false,\r\n    filter: false,\r\n  },\r\n];\r\nconst MainComponent = () => {\r\n  const history = useHistory();\r\n  const queryPage = useLocation().search.match(/page=([0-9]+)/, \"\");\r\n  const currentPage = Number(queryPage && queryPage[1] ? queryPage[1] : 1);\r\n  const [page, setPage] = useState(currentPage);\r\n  const [data, setData] = useState([]);\r\n\r\n  const canEdit = loginUserHasAny([PERMISSIONS.EDUCATION_STAFF]);\r\n\r\n  const pageChange = (newPage) => {\r\n    currentPage !== newPage && history.push(`/templates/list?page=${newPage}`);\r\n    setPage(newPage);\r\n  };\r\n\r\n  useEffect(() => {\r\n    api.get(`/templates`, { params: { direction: \"DESC\" } }).then(setData);\r\n  }, [page]);\r\n\r\n  return (\r\n    <CCard>\r\n      <CCardBody>\r\n        <CDataTable\r\n          items={data}\r\n          fields={canEdit ? fields : fields.slice(0, -1)}\r\n          activePage={page}\r\n          itemsPerPage={5}\r\n          hover\r\n          sorter\r\n          striped\r\n          columnFilter\r\n          tableFilter\r\n          itemsPerPageSelect\r\n          scopedSlots={{\r\n            actions: (item) => (\r\n              <td>\r\n                <CTooltip content={\"Chỉnh sửa\"}>\r\n                  <CButton\r\n                    color=\"primary\"\r\n                    variant=\"outline\"\r\n                    onClick={() => {\r\n                      history.push(`/templates/${item.id}`, item);\r\n                    }}\r\n                  >\r\n                    <CIcon name=\"cil-pencil\" />\r\n                  </CButton>\r\n                </CTooltip>\r\n              </td>\r\n            ),\r\n          }}\r\n        />\r\n        <CPagination\r\n          size=\"sm\"\r\n          activePage={page}\r\n          onActivePageChange={pageChange}\r\n          align=\"center\"\r\n        />\r\n      </CCardBody>\r\n    </CCard>\r\n  );\r\n};\r\n\r\nexport default MainComponent;\r\n","import {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CNav,\r\n  CNavItem,\r\n  CNavLink,\r\n  CRow,\r\n  CTabContent,\r\n  CTabPane,\r\n  CTabs,\r\n} from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { loginUserHasAny, PERMISSIONS } from \"src/service/permissionService\";\r\nimport SettingTemplate from \"./SettingTemplate\";\r\nimport TemplateTable from \"./TemplateTable\";\r\n\r\nconst tabs = [\r\n  {\r\n    url: \"/list\",\r\n    tabName: \"Danh sách mẫu tiêu chí\",\r\n    component: <TemplateTable />,\r\n  },\r\n  {\r\n    url: \"/setting\",\r\n    tabName: \"Cài đặt mẫu tiêu chí\",\r\n    component: <SettingTemplate />,\r\n  },\r\n];\r\n\r\nconst MainComponent = () => {\r\n  const history = useHistory();\r\n  const lastPath = useLocation().pathname.split(\"/\").pop();\r\n  const [tabIndex, setTabIndex] = useState(\r\n    [\"templates\", \"list\"].includes(lastPath) ? 0 : 1\r\n  );\r\n\r\n  const canCreate = loginUserHasAny([PERMISSIONS.EDUCATION_STAFF]);\r\n\r\n  useEffect(() => {\r\n    history.push(\r\n      `/templates${\r\n        !canCreate && tabIndex === 0 ? \"/setting\" : tabs[tabIndex].url\r\n      }`\r\n    );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [tabIndex]);\r\n\r\n  return (\r\n    <CCard>\r\n      <CCardBody>\r\n        <CTabs activeTab={tabIndex} onActiveTabChange={setTabIndex}>\r\n          {canCreate && (\r\n            <CRow>\r\n              <CCol>\r\n                <CNav variant=\"tabs\">\r\n                  {tabs.map((e) => (\r\n                    <CNavItem key={e.tabName}>\r\n                      <CNavLink>{e.tabName}</CNavLink>\r\n                    </CNavItem>\r\n                  ))}\r\n                </CNav>\r\n              </CCol>\r\n              <CCol sm=\"7\" className=\"d-none d-md-block\">\r\n                <CButton\r\n                  color=\"primary\"\r\n                  className=\"float-right\"\r\n                  onClick={() => {\r\n                    history.push(`/templates/create`);\r\n                  }}\r\n                >\r\n                  Thêm mẫu mới\r\n                </CButton>\r\n              </CCol>\r\n            </CRow>\r\n          )}\r\n          <CTabContent>\r\n            {tabs.map((tab, index) => (\r\n              <CTabPane key={index}>\r\n                {index === tabIndex && tab.component}\r\n              </CTabPane>\r\n            ))}\r\n          </CTabContent>\r\n        </CTabs>\r\n      </CCardBody>\r\n    </CCard>\r\n  );\r\n};\r\n\r\nexport default MainComponent;\r\n"],"sourceRoot":""}