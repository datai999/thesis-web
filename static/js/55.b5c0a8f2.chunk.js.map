{"version":3,"sources":["pages/setting/council/CouncilRoleModal.js","pages/setting/council/CouncilSetting.js"],"names":["MainComponent","view","disableView","success","defaultForm","useState","form","setForm","update","setUpdate","setValueForm","path","value","nextForm","_","cloneDeep","set","setGetForm","getPath","setPath","get","onChange","e","target","selectProps","currentTarget","useEffect","Object","keys","length","displayOrder","deleted","color","show","onClose","closeButton","className","md","id","row","htmlFor","invalid","name","valid","required","custom","size","min","max","placeholder","type","step","labelOn","labelOff","checked","onClick","api","patch","then","response","post","fields","key","label","_style","width","maxWidth","sorter","filter","data","setData","modalView","setModalView","setDefaultForm","getData","a","params","sort","CouncilRoleModal","items","striped","itemsPerPage","scopedSlots","item","actions","variant"],"mappings":"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","file":"static/js/55.b5c0a8f2.chunk.js","sourcesContent":["import {\r\n  CButton,\r\n  CCol,\r\n  CForm,\r\n  CFormGroup,\r\n  CInput,\r\n  CInvalidFeedback,\r\n  CLabel,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow,\r\n  CSelect,\r\n  CSwitch,\r\n} from \"@coreui/react\";\r\nimport _ from \"lodash\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport api from \"src/service/api\";\r\n\r\nconst MainComponent = ({ view, disableView, success, defaultForm = {} }) => {\r\n  const [form, setForm] = useState({});\r\n  const [update, setUpdate] = useState(false);\r\n\r\n  const setValueForm = (path, value) => {\r\n    let nextForm = _.cloneDeep(form);\r\n    _.set(nextForm, path, value);\r\n    setForm(nextForm);\r\n  };\r\n\r\n  const setGetForm = (getPath, setPath) => {\r\n    return {\r\n      value: _.get(form, getPath),\r\n      onChange: (e) => setValueForm(getPath ?? setPath, e.target.value),\r\n    };\r\n  };\r\n\r\n  const selectProps = (path) => {\r\n    return {\r\n      onChange: (e) => setValueForm(path, e.currentTarget.value),\r\n    };\r\n  };\r\n\r\n  const submit = () => {\r\n    if (update)\r\n      api.patch(`/council-roles`, form).then((response) => {\r\n        disableView();\r\n        success(response);\r\n      });\r\n    else\r\n      api.post(`/council-roles`, form).then((response) => {\r\n        disableView();\r\n        success(response);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setUpdate(defaultForm && Object.keys(defaultForm).length > 0);\r\n    if (Object.keys(defaultForm).length <= 0) {\r\n      defaultForm.displayOrder = 1;\r\n      defaultForm.deleted = false;\r\n    }\r\n    setForm(defaultForm);\r\n  }, [defaultForm]);\r\n\r\n  return (\r\n    <CModal color=\"info\" show={view} onClose={disableView}>\r\n      <CModalHeader closeButton>\r\n        <CModalTitle>\r\n          {update ? \"Chỉnh sửa\" : \"Thêm mới\"} vai trò trong hội đồng\r\n        </CModalTitle>\r\n      </CModalHeader>\r\n      <CModalBody className=\"px-3\">\r\n        {update && (\r\n          <CRow>\r\n            <CCol md=\"4\">\r\n              <CLabel>Mã vai trò</CLabel>\r\n            </CCol>\r\n            <CCol>{form.id}</CCol>\r\n          </CRow>\r\n        )}\r\n\r\n        <CForm>\r\n          <CFormGroup row>\r\n            <CCol md=\"4\">\r\n              <CLabel htmlFor=\"name\">Tên vai trò</CLabel>\r\n            </CCol>\r\n            <CCol>\r\n              <CInput\r\n                id=\"name\"\r\n                invalid={!form.name}\r\n                valid={form.name}\r\n                required\r\n                {...setGetForm(\"name\")}\r\n              />\r\n              {!form.name && (\r\n                <CInvalidFeedback>Không được để trống</CInvalidFeedback>\r\n              )}\r\n            </CCol>\r\n          </CFormGroup>\r\n\r\n          <CFormGroup row>\r\n            <CCol md=\"4\">\r\n              <CLabel>Số lượng thành viên</CLabel>\r\n            </CCol>\r\n            <CCol>\r\n              <CSelect\r\n                custom\r\n                id=\"selectMin\"\r\n                size=\"sm\"\r\n                value={form.min}\r\n                {...selectProps(\"min\")}\r\n              >\r\n                <option>1</option>\r\n                <option>2</option>\r\n                <option>3</option>\r\n              </CSelect>\r\n            </CCol>\r\n            {\"->\"}\r\n            <CCol md=\"4\">\r\n              <CSelect\r\n                custom\r\n                id=\"selectMax\"\r\n                size=\"sm\"\r\n                value={form.max}\r\n                {...selectProps(\"max\")}\r\n              >\r\n                <option>1</option>\r\n                <option>2</option>\r\n                <option>3</option>\r\n                <option>4</option>\r\n                <option>5</option>\r\n              </CSelect>\r\n            </CCol>\r\n          </CFormGroup>\r\n\r\n          <CFormGroup row>\r\n            <CCol md=\"4\">\r\n              <CLabel>Thứ tự hiện thị</CLabel>\r\n            </CCol>\r\n            <CCol md=\"3\">\r\n              <CInput\r\n                id=\"name\"\r\n                placeholder=\"0, 1,...\"\r\n                type=\"number\"\r\n                step=\"1\"\r\n                invalid={!form.displayOrder}\r\n                valid={form.displayOrder}\r\n                required\r\n                {...setGetForm(\"displayOrder\")}\r\n              />\r\n              {!form.name && (\r\n                <CInvalidFeedback>Không được để trống</CInvalidFeedback>\r\n              )}\r\n            </CCol>\r\n          </CFormGroup>\r\n\r\n          <CFormGroup row>\r\n            <CCol md=\"4\">\r\n              <CLabel>Sử dụng</CLabel>\r\n            </CCol>\r\n            <CCol md=\"3\">\r\n              <CSwitch\r\n                color=\"primary\"\r\n                labelOn={\"\\u2713\"}\r\n                labelOff={\"\\u2715\"}\r\n                checked={!form.deleted}\r\n                onChange={(e) =>\r\n                  setValueForm(\"deleted\", !e.currentTarget.checked)\r\n                }\r\n              />\r\n            </CCol>\r\n          </CFormGroup>\r\n        </CForm>\r\n      </CModalBody>\r\n      <CModalFooter>\r\n        <CButton color=\"info\" onClick={submit}>\r\n          Xác nhận\r\n        </CButton>\r\n        <CButton color=\"secondary\" onClick={disableView}>\r\n          Quay về\r\n        </CButton>\r\n      </CModalFooter>\r\n    </CModal>\r\n  );\r\n};\r\n\r\nexport default MainComponent;\r\n","import CIcon from \"@coreui/icons-react\";\r\nimport {\r\n  CBadge,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CDataTable,\r\n  CRow\r\n} from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport api from \"src/service/api\";\r\nimport CouncilRoleModal from \"./CouncilRoleModal\";\r\n\r\nconst fields = [\r\n  { key: \"id\", label: \"Mã\", _style: { width: \"1%\" } },\r\n  {\r\n    key: \"displayOrder\",\r\n    label: \"Thứ tự hiển thị\",\r\n    _style: { maxWidth: \"50px\" },\r\n  },\r\n  { key: \"name\", label: \"Vai trò\" },\r\n  { key: \"min\", label: \"Tối thiểu\" },\r\n  { key: \"max\", label: \"Tối đa\" },\r\n  { key: \"deleted\", label: \"Sử dụng\" },\r\n  {\r\n    key: \"actions\",\r\n    label: \"\",\r\n    _style: { width: \"10%\" },\r\n    sorter: false,\r\n    filter: false,\r\n  },\r\n];\r\n\r\nconst MainComponent = () => {\r\n  const [data, setData] = useState([]);\r\n  const [modalView, setModalView] = useState(false);\r\n  const [defaultForm, setDefaultForm] = useState({});\r\n\r\n  const getData = async () => {\r\n    api\r\n      .get(`/council-roles/all`, {\r\n        params: {\r\n          sort: \"displayOrder\",\r\n        },\r\n      })\r\n      .then(setData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <CCard>\r\n      <CouncilRoleModal\r\n        view={modalView}\r\n        disableView={() => setModalView(false)}\r\n        defaultForm={defaultForm}\r\n        success={() => {\r\n          setDefaultForm({});\r\n          getData();\r\n        }}\r\n      />\r\n      <CCardHeader>\r\n        <CRow>\r\n          <CCol>\r\n            <h4 className=\"card-title mb-0\">Cài đặt thành viên hội đồng</h4>\r\n          </CCol>\r\n          <CCol md=\"2\">\r\n            <CButton\r\n              color=\"primary\"\r\n              className=\"float-right\"\r\n              onClick={() => {\r\n                setDefaultForm({});\r\n                setModalView(true);\r\n              }}\r\n            >\r\n              Thêm vai trò mới\r\n            </CButton>\r\n          </CCol>\r\n        </CRow>\r\n      </CCardHeader>\r\n      <CCardBody>\r\n        <CDataTable\r\n          items={data}\r\n          fields={fields}\r\n          striped\r\n          itemsPerPage={5}\r\n          scopedSlots={{\r\n            deleted: (item) => (\r\n              <td>\r\n                <CBadge color={item.deleted ? \"secondary\" : \"success\"}>\r\n                  {item.deleted ? \"Không\" : \"Có\"}\r\n                </CBadge>\r\n              </td>\r\n            ),\r\n            actions: (item) => (\r\n              <td>\r\n                <CButton\r\n                  color=\"primary\"\r\n                  variant=\"outline\"\r\n                  size=\"sm\"\r\n                  onClick={() => {\r\n                    setDefaultForm(item);\r\n                    setModalView(true);\r\n                  }}\r\n                >\r\n                  <CIcon name=\"cil-pencil\" />\r\n                </CButton>\r\n              </td>\r\n            ),\r\n          }}\r\n        />\r\n      </CCardBody>\r\n    </CCard>\r\n  );\r\n};\r\n\r\nexport default MainComponent;\r\n"],"sourceRoot":""}